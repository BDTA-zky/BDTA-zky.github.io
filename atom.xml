<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>大数据科技协会-zky</title>
  
  
  <link href="https://bdta-zky.github.io/atom.xml" rel="self"/>
  
  <link href="https://bdta-zky.github.io/"/>
  <updated>2023-09-26T02:33:13.088Z</updated>
  <id>https://bdta-zky.github.io/</id>
  
  <author>
    <name>刘浩龙</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python150题day05</title>
    <link href="https://bdta-zky.github.io/Python150%E9%A2%98day05/"/>
    <id>https://bdta-zky.github.io/Python150%E9%A2%98day05/</id>
    <published>2023-09-18T12:00:09.000Z</published>
    <updated>2023-09-26T02:33:13.088Z</updated>
    
    <content type="html"><![CDATA[<h1 id="⑤合并字符串"><a href="#⑤合并字符串" class="headerlink" title="⑤合并字符串"></a>⑤合并字符串</h1><blockquote><p>str1=“1，2，3”</p><p>str2=“4，5，6”</p></blockquote><p>请将str1合并到str2的末尾，并思考这个过程中，是否产生了新的字符串</p><p><strong>解答：</strong></p><blockquote><p>str1 += str2</p></blockquote><p>这个过程中，产生的新的字符串，字符串是不可变对象，从字面意义上理解，似乎str1的内容发生变化了， 但本质上是产生了新的字符串并赋值给str1，print（str1），合并前后的内存地址是不一样的。</p><h1 id="⑥统计练习"><a href="#⑥统计练习" class="headerlink" title="⑥统计练习"></a>⑥统计练习</h1><blockquote><p>lst = [2,5,6,7,8,9,2,9,9]</p></blockquote><p><strong>请写程序完成下列题目：</strong></p><blockquote><p>1.找出列表里的最大值</p><p>2.找出列表里的最小值</p><p>3.找出列表里最大值的个数</p><p>4.计算列表里所有元素的和</p><p>5.计算列表里元素的平均值</p><p>6.计算列表的长度</p><p>7.找出元素6在列表中的索引</p></blockquote><p><strong>解答：</strong></p><blockquote><p>\1. max(lst)</p><p>\2. min(lst)</p><p>\3. lst.count(max(lst))</p><p>\4. sum(lst)</p><p>\5. sum(lst)/float(len(lst))</p><p>\6. len(lst)</p><p>\7. lst.index(6)</p></blockquote><p><strong>第五题解析：</strong></p><blockquote><ul><li><code>sum(lst)</code>：这个部分是用来计算列表 <code>lst</code> 中所有元素的总和。</li><li><code>len(lst)</code>：这个部分是用来计算列表 <code>lst</code> 的长度，即列表中元素的个数。</li><li><code>float(len(lst))</code>：这个部分是将列表的长度转换为浮点数类型，以确保在进行除法运算时得到的结果是浮点数。</li><li><code>sum(lst)/float(len(lst))</code>：这个部分将列表的总和除以列表的长度，得到的结果就是列表元素的平均值。</li></ul><p><strong>这部分题考察的是对内置函数的理解和应用</strong></p></blockquote><p><strong>下面的题目不写代码，仅凭思考来回答</strong></p><blockquote><p>1.lst[2:4]的值是什么</p><p>2.lst[1: -3]的值是什么</p><p>3.lst[-5]的值是什么</p><p>4.lst[:-4] 的值是什么</p><p>5.lst[-4:] 的值是什么</p></blockquote><p><strong>解答：</strong></p><blockquote><p>\1. [6, 7]</p><p>\2. [5, 6, 7, 8, 9]</p><p>\3. 8</p><p>\4. [2, 5, 6, 7, 8]</p><p>\5. [9, 2, 9, 9]</p></blockquote><p>列表的切片操作，一定要记住<strong>左闭右开</strong></p><p><strong>注意第三和第四个的区别，少一个符号的区别很大</strong></p><h1 id="⑦列表操作练习"><a href="#⑦列表操作练习" class="headerlink" title="⑦列表操作练习"></a><strong>⑦列表操作练习</strong></h1><blockquote><p>lst = [2, 5, 6, 7, 8, 9, 2, 9, 9]</p></blockquote><p><strong>请写程序完成下列题目：</strong></p><blockquote><p>请写程序完成下列操作<br>1.在列表的未尾增加元素15<br>2.在列表的中间位置插入元素20</p><p>3.将列表[2，5，6]合并到Ist中<br>4.移除列表中索引为3的元素<br>5.翻转列表里的所有元素<br>6.对列表里的元素进行排序，从小到大一次，从大到小一次</p></blockquote><p><strong>解答：</strong></p><blockquote><p>\1. lst.append(15)</p><p>\2. lst.insert(len(lst)//2, 20)</p><p>\3. lst.extend([2, 5, 6])</p><p>\4. lst.remove(lst[3])</p><p>\5. lst = lst[::-1]</p><p>\6. lst.sort() lst.sort(reverse=True)</p></blockquote><p><strong>第二题解析：</strong></p><blockquote><p><code>len(lst)//2</code> 表示列表 <code>lst</code> 的长度除以2，即中间位置的索引。然后，<code>lst.insert()</code> 方法用于在指定的索引位置插入一个元素，这里的索引位置是中间位置，元素是 20。这样，执行完这段代码后，列表 <code>lst</code> 中就会在中间位置插入一个元素 20。</p></blockquote><p><strong>第五题解析：</strong></p><blockquote><p><code>lst[::-1]</code> 是 Python 中的切片操作，用于创建一个与原列表 <code>lst</code> 具有相同元素但顺序相反的新列表。具体来说：</p><ul><li><code>[::-1]</code>：这部分表示切片操作，其中的 <code>::</code> 表示从列表的起始位置到结束位置，而 <code>-1</code> 表示步长为 -1，即逆序遍历列表。</li></ul><p>通过将列表 <code>lst</code> 进行切片操作 <code>[::-1]</code>，代码将创建一个新的列表，其中的元素顺序与原列表 <code>lst</code> 相反。</p><p>例如，如果原列表 <code>lst</code> 是 <code>[1, 2, 3, 4, 5]</code>，那么 <code>lst[::-1]</code> 将返回一个新的列表 <code>[5, 4, 3, 2, 1]</code>，即原列表的逆序。</p><p>所以，<code>lst = lst[::-1]</code> 这段代码的作用是将列表 <code>lst</code> 中的元素顺序反转，并将结果保存回原列表 <code>lst</code> 中。</p></blockquote><p><strong>第六题解析：</strong></p><blockquote><p><code>lst.sort()</code> 是一个用于列表排序的方法。它会按照默认的升序方式对列表进行排序。例如，如果列表 <code>lst</code> 是 <code>[3, 1, 2]</code>，那么调用 <code>lst.sort()</code> 之后，列表 <code>lst</code> 将变为 <code>[1, 2, 3]</code>。</p><p><code>lst.sort(reverse=True)</code> 是对列表进行降序排序的方法。它会按照降序的方式对列表进行排序。例如，如果列表 <code>lst</code> 是 <code>[3, 1, 2]</code>，那么调用 <code>lst.sort(reverse=True)</code> 之后，列表 <code>lst</code> 将变为 <code>[3, 2, 1]</code>。</p><p>需要注意的是，这两个方法会直接修改原始列表，而不会返回一个新的排序后的列表。如果你想要获得一个新的排序后的列表，可以使用 <code>sorted()</code> 函数。例如，<code>sorted_lst = sorted(lst)</code> 会返回一个新的已排序列表，而不会修改原始列表 <code>lst</code>。</p></blockquote><h1 id="⑧复杂列表练习"><a href="#⑧复杂列表练习" class="headerlink" title="⑧复杂列表练习"></a><strong>⑧复杂列表练习</strong></h1><blockquote><p>lst = [1, 4, 5, [1, 3, 5, 6, [8, 9, 10, 12]]]</p></blockquote><p><strong>不写代码，仅凭思考来回答</strong></p><blockquote><p>1.列表Ist的长度是多少<br>2.列表Ist中有几个元素<br>3.lst[1] 的数据类型是什么<br>4.lst[3]的数据类型是什么<br>5.lst[3][4] 的值是什么<br>6.如果才能访问到 9 这个值<br>7.执行lst[3][4].append([5,6])后，列表lst的内容是什么，手写出来<br>8.lst[-1][-1][-2]的值是什么<br>9.lst[-2]的值是什么<br>10.len(lst[-1]) 的值是什么<br>11.len(lst[-1][-1])的值是什么<br>12.lst[-1][1:3] 的值是什么<br>13.lst[-1][-1][1:-2]的值是什么</p></blockquote><p><strong>解答：</strong></p><p>第1题和第2题其实是一个意思，原本统计列表里数据个数不是什么难事，可一旦出现了嵌套列表的情况，有人就分不清了，列表里的数据是以逗号分隔的，lst[3] 是一个列表，其余都是int类型数据，因此lst的长度是4<br>第3题，lst[1] = 4,是int类型数据<br>第4题，lst[3] 的数据类型是列表<br>第5题，lst[3]的值是[1,3,5,6,[8,9,10,12]]，仍然是一个列表，其索引为4的数据是[8,9,10,12]，是列表<br>第6题，lst[3][4][1]第7题，[1,4,5,[1,3,5,6,[8,9,10,12,[5,6]]]],参考5，6两个题目的解答第8题，Ist[-1]的值是[1,3,5,6,[8,9,10,12]]， 再次取索引为-1的数据为[8,9,10,12]，取索引为-2的数据为10<br>第9题，5<br>第10题，5<br>第11题，4<br>第12题，[3,5]， lst[-1]的值是[1,3,5,6,[8,9,10,12]]第13题，[9]， lst[-1][-1]的值是[8,9,10,12]，切片起始位置索引是1，值为9，结束位置是-2，值为10，由于左闭右开，最终结果是[9]</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;⑤合并字符串&quot;&gt;&lt;a href=&quot;#⑤合并字符串&quot; class=&quot;headerlink&quot; title=&quot;⑤合并字符串&quot;&gt;&lt;/a&gt;⑤合并字符串&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;str1=“1，2，3”&lt;/p&gt;
&lt;p&gt;str2=“4，5，6”&lt;/p&gt;
&lt;/bl</summary>
      
    
    
    
    <category term="python" scheme="https://bdta-zky.github.io/categories/python/"/>
    
    <category term="入门150题专栏" scheme="https://bdta-zky.github.io/categories/python/%E5%85%A5%E9%97%A8150%E9%A2%98%E4%B8%93%E6%A0%8F/"/>
    
    
    <category term="python" scheme="https://bdta-zky.github.io/tags/python/"/>
    
    <category term="入门150题专栏" scheme="https://bdta-zky.github.io/tags/%E5%85%A5%E9%97%A8150%E9%A2%98%E4%B8%93%E6%A0%8F/"/>
    
  </entry>
  
  <entry>
    <title>Python150题day04</title>
    <link href="https://bdta-zky.github.io/Python150%E9%A2%98day04/"/>
    <id>https://bdta-zky.github.io/Python150%E9%A2%98day04/</id>
    <published>2023-09-17T12:00:02.000Z</published>
    <updated>2023-09-26T02:33:27.906Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-3列表与元组练习题"><a href="#1-3列表与元组练习题" class="headerlink" title="1.3列表与元组练习题"></a>1.3列表与元组练习题</h1><h1 id="①列表基础考察"><a href="#①列表基础考察" class="headerlink" title="①列表基础考察"></a>①列表基础考察</h1><p>已知一个列表<strong>lst = [1,2,3,4,5]</strong><br>1.求列表的长度<br>2.判断6 是否在列表中<br>3.lst + [6,7,8] 的结果是什么?<br>4.lst*2 的结果是什么<br>5.列表里元素的最大值是多少<br>6.列表里元素的最小值是多少<br>7.列表里所有元素的和是多少<br>8.在索引1的后面新增一个的元素109.在列表的未尾新增一个元素20</p><p><strong>解答：</strong></p><blockquote><p>\1. len(lst)</p><p>\2. 6 in lst</p><p>\3. [1,2,3,4,5,6,7,8]</p><p>\4. [1, 2, 3, 4, 5, 1, 2, 3, 4, 5]</p><p>\5. max(lst)</p><p>\6. min(lst)</p><p>\7. sum(lst)</p><p>\8. lst.insert(1, 10)</p><p>\9. lst.append(20)</p></blockquote><h1 id="②修改列表"><a href="#②修改列表" class="headerlink" title="②修改列表"></a>②修改列表</h1><p><strong>lst = [1, [4, 6],True]</strong></p><p><strong>请将列表里所有数字修改成原来的两倍</strong></p><p>答案：</p><blockquote><p>lst[0] = 2</p><p>lst[1][0] = 4</p><p>lst[1][1] = 12</p></blockquote><p><strong>你以为存在一个函数，其功能便是将列表里所有的数据都变成原来的两倍，这样才显得变成语言是一个非常神奇的东西，但是很遗憾的告诉你，那些神奇的东西都是程序员自己实现的。</strong></p><p><strong>想要修改列表里的数据，必须通过索引对其重新赋值，上面的方法很low，你也可以写一个区数来实现这个功能，我们假设要处理的列表里只int,float,bool,和list数据，不管嵌套基层list.这个函数都应该能正确处理，下面是一段示例代码</strong></p><blockquote><p>def double_list(lst):</p><p>​    for index,item in enumerate(lst):<br>​        if isinstance(item,bool):</p><p>​            continue</p><p>​        if isinstance(item,(int,float)):</p><p>​            lst[index]*=2</p><p>​        if isinstance(item,list):</p><p>​            double_list(item)</p><p>if <em>name</em> == ‘<em>main</em>‘:</p><p>​    lst = [1,[4,6],True]</p><p>​    double_list(lst)</p><p>​    print(lst)</p></blockquote><h1 id="③元组概念考察"><a href="#③元组概念考察" class="headerlink" title="③元组概念考察"></a>③元组概念考察</h1><p><strong>写出下面代码的执行结果和最终结果的类型</strong></p><p>\1. (1,2)*2</p><p>\2. (1,)*2</p><p>\3. (1)*2</p><p><strong>解答：</strong></p><blockquote><p>\1. (1, 2, 1, 2)</p><p>\2. (1, 1)</p><p>\3. 2</p></blockquote><p>注意第2和第3个，当元组里只有一个数据时，必须有逗号，否则就变成了第三题的形式：<strong>1*2</strong></p><p><strong>当元组中只有一个数据时，如果不省略了逗号，那么小括号的作用就不再是表示元组，而是表示运算优先级</strong></p><h1 id="④合并列表"><a href="#④合并列表" class="headerlink" title="④合并列表"></a><strong>④合并列表</strong></h1><p>lst = [1,2,3]</p><p>lst2 = [4,5,6]</p><p><strong>不使用＋号运算符，将lst2合并到lst的末尾，并思考，这个过程中，是否产生了新的列表</strong></p><p><strong>解答：</strong></p><blockquote><p>lst.extend(lst2)</p></blockquote><p><strong>这个过程中不会产生新的列表，最直观的检验方式就是print(id(lst)),合并前后，lst的内存地址都没有发生变化，只是列表里的内容发生了变化</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-3列表与元组练习题&quot;&gt;&lt;a href=&quot;#1-3列表与元组练习题&quot; class=&quot;headerlink&quot; title=&quot;1.3列表与元组练习题&quot;&gt;&lt;/a&gt;1.3列表与元组练习题&lt;/h1&gt;&lt;h1 id=&quot;①列表基础考察&quot;&gt;&lt;a href=&quot;#①列表基础考察&quot; c</summary>
      
    
    
    
    <category term="python" scheme="https://bdta-zky.github.io/categories/python/"/>
    
    <category term="入门150题专栏" scheme="https://bdta-zky.github.io/categories/python/%E5%85%A5%E9%97%A8150%E9%A2%98%E4%B8%93%E6%A0%8F/"/>
    
    
    <category term="python" scheme="https://bdta-zky.github.io/tags/python/"/>
    
    <category term="入门150题专栏" scheme="https://bdta-zky.github.io/tags/%E5%85%A5%E9%97%A8150%E9%A2%98%E4%B8%93%E6%A0%8F/"/>
    
  </entry>
  
  <entry>
    <title>Python150题day03</title>
    <link href="https://bdta-zky.github.io/Python150%E9%A2%98day03/"/>
    <id>https://bdta-zky.github.io/Python150%E9%A2%98day03/</id>
    <published>2023-09-16T11:59:35.000Z</published>
    <updated>2023-09-26T02:33:35.257Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-2字符串练习题"><a href="#1-2字符串练习题" class="headerlink" title="1.2字符串练习题"></a>1.2字符串练习题</h1><h1 id="①字符串内置方法练习"><a href="#①字符串内置方法练习" class="headerlink" title="①字符串内置方法练习"></a>①字符串内置方法练习</h1><blockquote><p><strong>在交互式解释器中完成下列题目</strong><br>1.将字符串“abcd”转成大写<br>2.计算字符串“cd”在 字符串“abcd”中出现的位置<br>3.字符串“a,b,c,d”，请用逗号分割字符串，分割后的结果是什么类型的？</p><p>4.”[name]喜欢{fruit}”.format(name=”李雷”)执行会出错，请修改代码让其正确执行</p><p>\5. string =”Python is good”, 请将字符串里的Python替换成 python,并输出替换后的结果<br>6.有一个字符串 string =“python修炼第一期.html”，请写程序从这个字符串里获得.htm前面的部分，要用尽可能多的方式来做这个事情<br>7.如何获取字符串的长度?<br>8.”this is a book”,请将字符串里的book替换成apple<br>9.”this is a book”,请用程序判断该字符串是否以this开头</p><p>10.”this is a book”，请用程序判断该字符串是否以apple结尾</p><p>11.”This IS a book”请将字符串里的大写字符转成小写字符<br>12.”This IS a book”,请将字符串里的小写字符转成大写字符<br>13.”this is a book\n”,字符串的末尾有一个回车符，请将其删除</p></blockquote><p><strong>解答：</strong></p><blockquote><p>\1. “abcd”.upper()<br>\2. “abcd”.find(‘cd’)<br>\3. “a,b,c,d”.split(‘,’)<br>\4. “{name}喜欢{fruit}”.format(name=”李雷”, fruit=’苹果’)<br>\5. string.replace(‘Python’, ‘python’)<br>\6. string[0:string.find(‘.html’)] 或者string[0:-5]<br>\7. 使⽤用len函数<br>\8. “this is a book”.replace(‘book’, ‘apple’)<br>\9. “this is a book”.startswith(‘this’)<br>\10. “this is a book”.endswith(‘apple’)<br>\11. “This IS a book”.lower()<br>\12. “This IS a book”.upper()<br>\13. “this is a book\n”.strip()</p></blockquote><p><strong>这里只对其中2个题目讲解</strong></p><p>第4小题的程序直接运行会报错，因为字符串里面有两个需要替换的位置，而format方法里只传入了一个参数，显然是不够</p><p>第13小题，strip()方法用于移除字符串头尾指定的字符(默认为空格或换行符)或字符序列，n 就是换行符，这里又涉及到转义字符这个概念，本篇不做详细讲解，求知欲强的同学可以自己百度一下</p><h1 id="②逻辑推理练习（字符串）"><a href="#②逻辑推理练习（字符串）" class="headerlink" title="②逻辑推理练习（字符串）"></a>②逻辑推理练习（字符串）</h1><blockquote><p><strong>不用代码，口述回答下面代码的执行结果</strong></p><p>string = “Python is good”<br>\1. string[1:20]</p><p>\2. string[20]</p><p>3.string[3:-4]<br>4.string[-10:-3]<br>5.string.lower()<br>6.string.replace(“o”，”0”)</p><p>\7. string.startswith(python’)<br>\8. string.split()<br>\9. len(string)<br>\10. string[30]<br>11.string.replace(“”,”)</p></blockquote><p><strong>解答：</strong></p><blockquote><p>\1. ‘ython is good’<br>\2. 报错<br>\3. ‘hon is ‘<br>\4. ‘on is g’<br>\5. ‘python is good’<br>\6. ‘Pyth0n is g00d’<br>\7. False<br>\8. [‘Python’, ‘is’, ‘good’]<br>\9. 14<br>\10. 报错<br>\11. ‘Pythonisgood’</p></blockquote><p><strong>第2题和第10题</strong>都报错，是因为超出了索引范围，字符串长度为14，你去20和30的位置取值，当然会报错<br>关于<strong>切片操作</strong>，只需要知道从哪里开始到哪里结束就一定能推导出答案，以string[3:-4]为例，3是开始的位置，-4是结束的位置，但这个范围是左闭右开的，从3开始没错，但不会到-4，而是到-5，更前面的一个位置，python支持负数索引，或者说是反向索引，从右向左从-1开始逐渐减小。<br>第一题中，做切片的时候是从1开始，到20结束，即便是右开，直到19，也仍然超出了索引范围，为什么不报错呢，这就是语言设计者自己的想法了，切片时，不论是开始位置还是结束位置，超出索引范围都不会报错，我猜，大概是由于切片是一个范围操作，这个范围内有值就切出来，没值返回空字符串就好了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-2字符串练习题&quot;&gt;&lt;a href=&quot;#1-2字符串练习题&quot; class=&quot;headerlink&quot; title=&quot;1.2字符串练习题&quot;&gt;&lt;/a&gt;1.2字符串练习题&lt;/h1&gt;&lt;h1 id=&quot;①字符串内置方法练习&quot;&gt;&lt;a href=&quot;#①字符串内置方法练习&quot; cla</summary>
      
    
    
    
    <category term="python" scheme="https://bdta-zky.github.io/categories/python/"/>
    
    <category term="入门150题专栏" scheme="https://bdta-zky.github.io/categories/python/%E5%85%A5%E9%97%A8150%E9%A2%98%E4%B8%93%E6%A0%8F/"/>
    
    
    <category term="python" scheme="https://bdta-zky.github.io/tags/python/"/>
    
    <category term="入门150题专栏" scheme="https://bdta-zky.github.io/tags/%E5%85%A5%E9%97%A8150%E9%A2%98%E4%B8%93%E6%A0%8F/"/>
    
  </entry>
  
  <entry>
    <title>Python150题day02</title>
    <link href="https://bdta-zky.github.io/Python150%E9%A2%98day02/"/>
    <id>https://bdta-zky.github.io/Python150%E9%A2%98day02/</id>
    <published>2023-09-15T07:59:10.000Z</published>
    <updated>2023-09-26T02:33:43.746Z</updated>
    
    <content type="html"><![CDATA[<h1 id="②数据类型考察"><a href="#②数据类型考察" class="headerlink" title="②数据类型考察"></a>②数据类型考察</h1><p><strong>请说出下面表达式结果的类型</strong></p><blockquote><p>\1. “True”<br>\2. “Flase”<br>\3. 4 &gt;= 5<br>\4. 5<br>\5. 5.0<br>\6. True</p></blockquote><p><strong>解答：</strong></p><blockquote><p>\1. str<br>\2. str<br>\3. bool<br>\4. int<br>\5. float<br>\6. bool</p></blockquote><p>唯一需要解释的就是4&gt;=5，这是错误的，所以等于false，false的类型是bool</p><h1 id="③交互式解释器练习"><a href="#③交互式解释器练习" class="headerlink" title="③交互式解释器练习"></a>③交互式解释器练习</h1><p><strong>请在交互式解释器里回答下面的题目</strong></p><blockquote><p>\1. 3的5次⽅方<br>\2. 7对2求模<br>\3. 9除5，要求有⼩小数部分<br>\4. 9除5，要求没有⼩小数部分<br>\5. ⽤用程序计算根号16，也就是16的2分之⼀一次⽅方</p></blockquote><p><strong>解答：</strong></p><blockquote><p>\1. 3**5<br>\2. 7%2<br>\3. 9/5<br>\4. 9//5<br>\5. import math<br>math.sqrt(16)</p></blockquote><p><strong>知识点：</strong></p><ol><li>幂运算用两个*</li><li>求模运算用%，其实就是求余数</li><li>除法中，结果保留小数部分用/，结果取整数用//</li><li>开根号，需要用到math模块的sqrt方法，和c还有java都大差不差</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;②数据类型考察&quot;&gt;&lt;a href=&quot;#②数据类型考察&quot; class=&quot;headerlink&quot; title=&quot;②数据类型考察&quot;&gt;&lt;/a&gt;②数据类型考察&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;请说出下面表达式结果的类型&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p</summary>
      
    
    
    
    <category term="python" scheme="https://bdta-zky.github.io/categories/python/"/>
    
    <category term="入门150题专栏" scheme="https://bdta-zky.github.io/categories/python/%E5%85%A5%E9%97%A8150%E9%A2%98%E4%B8%93%E6%A0%8F/"/>
    
    
    <category term="python" scheme="https://bdta-zky.github.io/tags/python/"/>
    
    <category term="入门150题专栏" scheme="https://bdta-zky.github.io/tags/%E5%85%A5%E9%97%A8150%E9%A2%98%E4%B8%93%E6%A0%8F/"/>
    
  </entry>
  
  <entry>
    <title>Python150题day01</title>
    <link href="https://bdta-zky.github.io/Python150%E9%A2%98day01/"/>
    <id>https://bdta-zky.github.io/Python150%E9%A2%98day01/</id>
    <published>2023-09-14T10:42:50.000Z</published>
    <updated>2023-09-26T02:33:52.287Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-1基本数据类型"><a href="#1-1基本数据类型" class="headerlink" title="1.1基本数据类型"></a>1.1基本数据类型</h1><p><strong>①逻辑推理联系（类型转换）</strong></p><blockquote><p>\1. 4.0 == 4</p><p>\2. “4.0” == 4</p><p>\3. bool(“1”)</p><p>\4. bool(“0”)</p><p>\5. str(32)</p><p>\6. int(6.26)</p><p>\7. float(32)</p><p>\8. float(“3.21”)</p><p>\9. int(“434”)</p><p>\10. int(“3.42”)</p><p>\11. bool(-1)</p><p>\12. bool(“”)</p><p>\13. bool(0)</p><p>\14. “wrqq” &gt; “acd”</p><p>\15. “ttt” == “ttt “</p><p>\16. “sd”*3</p><p>\17. “wer” + “2322”</p></blockquote><p><strong>答案：</strong></p><blockquote><p>\1. True </p><p>\2. False</p><p>\3. True</p><p>\4. True</p><p>\5. ‘32’</p><p>\6. 6</p><p>\7. 32.0</p><p>\8. 3.21</p><p>\9. 434</p><p>\10. 会报错</p><p>\11. True</p><p>\12. False</p><p>\13. False </p><p>\14. True</p><p>\15. False</p><p>\16. “sdsdsd”</p><p>\17. ‘wer2322</p></blockquote><p><strong>解析：</strong></p><blockquote><ol><li>4.0 == 4 ：在Python中，双等号（==）用于比较两个值是否相等。在这种情况下，4.0和4都表示相同的数值，因此它们是相等的，结果为True。</li><li>“4.0” == 4：这个表达式也是一个比较运算符，检查字符串”4.0”是否等于整数4。这是一个错误的比较，因为字符串和整数是不同的类型。表达式的结果为False。</li><li>bool(“1”)：这个表达式使用bool()函数将字符串”1”转换为布尔值。在Python中，非空字符串被视为True，因此表达式的结果为True。</li><li>bool(“0”)：这个表达式使用bool()函数将字符串”0”转换为布尔值。在Python中，非空字符串被视为True，因此表达式的结果为True。</li><li>str(32)：这个表达式使用str()函数将整数32转换为字符串。结果是字符串”32”。</li><li>int(6.26)：这个表达式使用int()函数将浮点数6.26转换为整数。结果是整数6，小数部分被截断。</li><li>float(32)：这个表达式使用float()函数将整数32转换为浮点数。结果是浮点数32.0。</li><li>float(“3.21”)：这个表达式使用float()函数将字符串”3.21”转换为浮点数。结果是浮点数3.21。</li><li>int(“434”)：这个表达式使用int()函数将字符串”434”转换为整数。结果是整数434。</li><li>int(“3.42”)：这个表达式使用int()函数将字符串”3.42”转换为整数。由于字符串表示的是浮点数，而int()函数只能将字符串转换为整数，因此会引发ValueError异常。</li><li>bool(-1)：这个表达式将整数-1转换为布尔值。在Python中，非零整数被视为True，因此表达式的结果为True。</li><li>bool(“”)：这个表达式将空字符串转换为布尔值。在Python中，空字符串被视为False，因此表达式的结果为False。</li><li>bool(0)：这个表达式将整数0转换为布尔值。在Python中，0被视为False，因此表达式的结果为False。</li><li>“wrqq” &gt; “acd”：这个表达式是一个字符串的比较运算符，检查字符串”wrqq”是否大于字符串”acd”。在字符串比较中，根据字母的字典顺序进行比较。根据字母顺序，”w”大于”a”，因此表达式的结果为True。</li><li>“ttt” == “ttt “：这个表达式是一个字符串的比较运算符，检查字符串”ttt”是否等于字符串”ttt “。这两个字符串是不相等的，因为它们的长度不同。表达式的结果为False。</li><li>“sd” * 3：这个表达式使用乘法运算符将字符串”sd”重复3次。结果是字符串”sdsdsd”。</li><li>“wer” + “2322”：这个表达式使用加法运算符将字符串”wer”和字符串”2322”连接起来。结果是字符串”wer2322”。</li></ol></blockquote><p><strong>注意点：</strong></p><blockquote><h2 id="bool函数转换规则"><a href="#bool函数转换规则" class="headerlink" title="bool函数转换规则"></a><strong>bool函数转换规则</strong></h2><p>bool函数进行转换时，其结果取决于传入参数与True和False的等价关系，只需记住一点即0，空字符串，None在条件判断语句中等价于False，其他数值都等价于True</p></blockquote><blockquote><h2 id="int-“3-42”-为什么会报错"><a href="#int-“3-42”-为什么会报错" class="headerlink" title="int(“3.42”) 为什么会报错"></a><strong>int(“3.42”) 为什么会报错</strong></h2><p>字符串”3.42”可以转成foat类型数据3.42,3.42可以转成int类型数据3，但是字符串”3.42”不可以直接使用int函数转成3，讲实话，我也觉得这个函数有些不灵活，或许是语言的发昨有自己的考虑吧，咱们对这种问题，不必深究，先做到知道它是什么，将来再去研究为什么</p></blockquote><blockquote><h2 id="字符串大小比较规则"><a href="#字符串大小比较规则" class="headerlink" title="字符串大小比较规则"></a>字符串大小比较规则</h2><p>两个字符串在比较大小时，比的不是长度，而是内容字符串左对齐后，逐个字符依次比较，直到可以分出胜负</p></blockquote><blockquote><h2 id="“sd”-3"><a href="#“sd”-3" class="headerlink" title="“sd”*3"></a>“sd”*3</h2><p>“sd”*3 的意思是sd重复3次，生成一个新的字符串</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-1基本数据类型&quot;&gt;&lt;a href=&quot;#1-1基本数据类型&quot; class=&quot;headerlink&quot; title=&quot;1.1基本数据类型&quot;&gt;&lt;/a&gt;1.1基本数据类型&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;①逻辑推理联系（类型转换）&lt;/strong&gt;&lt;/p&gt;
&lt;blockq</summary>
      
    
    
    
    <category term="python" scheme="https://bdta-zky.github.io/categories/python/"/>
    
    <category term="入门150题专栏" scheme="https://bdta-zky.github.io/categories/python/%E5%85%A5%E9%97%A8150%E9%A2%98%E4%B8%93%E6%A0%8F/"/>
    
    
    <category term="python" scheme="https://bdta-zky.github.io/tags/python/"/>
    
    <category term="入门150题专栏" scheme="https://bdta-zky.github.io/tags/%E5%85%A5%E9%97%A8150%E9%A2%98%E4%B8%93%E6%A0%8F/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7安装时直接跳过了安装信息摘要页面的解决方法</title>
    <link href="https://bdta-zky.github.io/CentOS7%E5%AE%89%E8%A3%85%E6%97%B6%E7%9B%B4%E6%8E%A5%E8%B7%B3%E8%BF%87%E4%BA%86%E5%AE%89%E8%A3%85%E4%BF%A1%E6%81%AF%E6%91%98%E8%A6%81%E9%A1%B5%E9%9D%A2%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>https://bdta-zky.github.io/CentOS7%E5%AE%89%E8%A3%85%E6%97%B6%E7%9B%B4%E6%8E%A5%E8%B7%B3%E8%BF%87%E4%BA%86%E5%AE%89%E8%A3%85%E4%BF%A1%E6%81%AF%E6%91%98%E8%A6%81%E9%A1%B5%E9%9D%A2%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</id>
    <published>2023-09-04T23:36:54.000Z</published>
    <updated>2023-09-26T01:25:16.174Z</updated>
    
    <content type="html"><![CDATA[<p>最近在配置Hadoop虚拟机的时候，创建的centos7虚拟机在安装信息摘要时直接自动跳过，直接跳到设置用户名和密码，在重复多次的重新删除安装后发现了问题所在：</p><p>在进行到选择操作系统来源时，注意是否出现<strong>“该操作系统将使用简易安装”</strong>的字样，</p><p><img src="https://s1.ax1x.com/2023/09/05/pPrDtHA.png" alt="pPrDtHA.png"></p><p>简易安装会在安装虚拟机后的配置过程中<strong>自动安装客户机操作系统和 VMware Tools</strong></p><p><strong>因此会导致虚拟机配置过程自动跳过安装信息摘要页面</strong></p><p><img src="https://s1.ax1x.com/2023/09/05/pPrDYBd.png" alt="pPrDYBd.png"></p><p><strong>如果要跳过简易安装，可选择稍后安装操作系统，在后面的配置中选择你的操作系统映像文件。</strong></p><p><img src="https://s1.ax1x.com/2023/09/05/pPrDJnH.png" alt="pPrDJnH.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;最近在配置Hadoop虚拟机的时候，创建的centos7虚拟机在安装信息摘要时直接自动跳过，直接跳到设置用户名和密码，在重复多次的重新删除安装后发现了问题所在：&lt;/p&gt;
&lt;p&gt;在进行到选择操作系统来源时，注意是否出现&lt;strong&gt;“该操作系统将使用简易安装”&lt;/stron</summary>
      
    
    
    
    <category term="资源教程" scheme="https://bdta-zky.github.io/categories/%E8%B5%84%E6%BA%90%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="资源教程" scheme="https://bdta-zky.github.io/tags/%E8%B5%84%E6%BA%90%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>案例2-2 小明都可以买什么</title>
    <link href="https://bdta-zky.github.io/%E6%A1%88%E4%BE%8B2-2-%E5%B0%8F%E6%98%8E%E9%83%BD%E5%8F%AF%E4%BB%A5%E4%B9%B0%E4%BB%80%E4%B9%88/"/>
    <id>https://bdta-zky.github.io/%E6%A1%88%E4%BE%8B2-2-%E5%B0%8F%E6%98%8E%E9%83%BD%E5%8F%AF%E4%BB%A5%E4%B9%B0%E4%BB%80%E4%B9%88/</id>
    <published>2023-07-09T13:41:12.000Z</published>
    <updated>2023-09-26T02:31:38.900Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>编写一个智能购物计算小程序，在一家商店有书本、铅笔、橡皮、可乐、零食5种商品，商品价格如表</p><p><img src="https://s1.ax1x.com/2023/07/09/pC2MT6e.png" alt="pC2MT6e.png"></p><p>假如你带了20元，且必须购买一本书，剩余的钱还可以购买哪种商品？可以购买几件，购买完后又能剩余多少钱？</p><h5 id="个人思路："><a href="#个人思路：" class="headerlink" title="个人思路："></a>个人思路：</h5><p>1.设计一个菜单，给商品编号</p><p>2.需要利用switch语句进行判断</p><p>3.利用取余、取模求得可购买数量和剩余</p><h1 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Example2_2</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"> </span><br><span class="line">        <span class="type">int</span> <span class="variable">pencil</span> <span class="operator">=</span> <span class="number">1</span>;<span class="comment">//铅笔</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">rubber</span> <span class="operator">=</span> <span class="number">2</span>;<span class="comment">//橡皮</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">cola</span> <span class="operator">=</span> <span class="number">3</span>;<span class="comment">//可乐</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">snacks</span> <span class="operator">=</span> <span class="number">5</span>;<span class="comment">//零食</span></span><br><span class="line"> </span><br><span class="line">        System.out.println(<span class="string">&quot;书本的价格是12元，你总共带了20元&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;1.铅笔的价格是1元&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;2.橡皮的价格是2元&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;3.可乐的价格是3元&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;4.零食的价格是5元&quot;</span>);</span><br><span class="line">        System.out.print(<span class="string">&quot;请输入你还想购入的商品编号:&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        Scanner sc=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> x=sc.nextInt();</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">switch</span>(x)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;购买完书本后还可以购买铅笔&quot;</span>+<span class="number">8</span>/pencil+<span class="string">&quot;支，还剩&quot;</span>+<span class="number">8</span>%pencil+<span class="string">&quot;元&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;购买完书本后还可以购买橡皮&quot;</span>+<span class="number">8</span>/rubber+<span class="string">&quot;块，还剩&quot;</span>+<span class="number">8</span>%rubber+<span class="string">&quot;元&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;购买完书本后还可以购买可乐&quot;</span>+<span class="number">8</span>/cola+<span class="string">&quot;瓶，还剩&quot;</span>+<span class="number">8</span>%cola+<span class="string">&quot;元&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;购买完书本后还可以购买零食&quot;</span>+<span class="number">8</span>/snacks+<span class="string">&quot;袋，还剩&quot;</span>+<span class="number">8</span>%snacks+<span class="string">&quot;元&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="运行结果："><a href="#运行结果：" class="headerlink" title="运行结果："></a>运行结果：</h1><p><img src="https://s1.ax1x.com/2023/07/09/pC2MXkt.png" alt="pC2MXkt.png"></p><p><img src="https://s1.ax1x.com/2023/07/09/pC2MjtP.png" alt="pC2MjtP.png"></p><p><img src="https://s1.ax1x.com/2023/07/09/pC2Mvff.png" alt="pC2Mvff.png"></p><p><img src="https://s1.ax1x.com/2023/07/09/pC2Mzp8.png" alt="pC2Mzp8.png"></p><h1 id="举一反三："><a href="#举一反三：" class="headerlink" title="举一反三："></a>举一反三：</h1><p>可改变题目条件，输入一个资金数目，然后选择一项商品，求得最多可买该商品多少件，剩余多少钱。</p><h5 id="个人思路：-1"><a href="#个人思路：-1" class="headerlink" title="个人思路："></a>个人思路：</h5><ol><li>在原有基础上，设一个变量代表资金数</li></ol><p>​    2.考虑特殊情况，需要判断资金是否足够最少买一个（在case中加入if语句进行判断）</p><h1 id="代码实现：-1"><a href="#代码实现：-1" class="headerlink" title="代码实现："></a>代码实现：</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Example2_2_new</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Scanner sc=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"> </span><br><span class="line">        System.out.print(<span class="string">&quot;请输入你的资金数:&quot;</span>);</span><br><span class="line">        <span class="type">int</span> w=sc.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">book</span> <span class="operator">=</span> <span class="number">12</span>;<span class="comment">//书本</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">pencil</span> <span class="operator">=</span> <span class="number">1</span>;<span class="comment">//铅笔</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">rubber</span> <span class="operator">=</span> <span class="number">2</span>;<span class="comment">//橡皮</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">cola</span> <span class="operator">=</span> <span class="number">3</span>;<span class="comment">//可乐</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">snacks</span> <span class="operator">=</span> <span class="number">5</span>;<span class="comment">//零食</span></span><br><span class="line"> </span><br><span class="line">        System.out.println(<span class="string">&quot;0.书本的价格是12元&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;1.铅笔的价格是1元&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;2.橡皮的价格是2元&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;3.可乐的价格是3元&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;4.零食的价格是5元&quot;</span>);</span><br><span class="line">        System.out.print(<span class="string">&quot;请输入你还想购入的商品编号:&quot;</span>);</span><br><span class="line">        <span class="type">int</span> x=sc.nextInt();</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">switch</span>(x)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">if</span>(w-book&lt;<span class="number">0</span>) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;对不起，对于该商品，您的资金一个也买不起0.0&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                System.out.println(<span class="string">&quot;您可以购买书本&quot;</span>+w/book+<span class="string">&quot;本，还剩&quot;</span>+w%book+<span class="string">&quot;元&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">if</span>(w-pencil&lt;<span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;对不起，对于该商品，您的资金一个也买不起0.0&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                System.out.println(<span class="string">&quot;您可以购买铅笔&quot;</span>+w/pencil+<span class="string">&quot;支，还剩&quot;</span>+w%pencil+<span class="string">&quot;元&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">if</span>(w-rubber&lt;<span class="number">0</span>) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;对不起，对于该商品，您的资金一个也买不起0.0&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                System.out.println(<span class="string">&quot;您可以购买橡皮&quot;</span>+w/rubber+<span class="string">&quot;块，还剩&quot;</span>+w%rubber+<span class="string">&quot;元&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                <span class="keyword">if</span>(w-cola&lt;<span class="number">0</span>) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;对不起，对于该商品，您的资金一个也买不起0.0&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                System.out.println(<span class="string">&quot;您可以购买可乐&quot;</span>+w/cola+<span class="string">&quot;瓶，还剩&quot;</span>+w%cola+<span class="string">&quot;元&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                <span class="keyword">if</span>(w-snacks&lt;<span class="number">0</span>) &#123;</span><br><span class="line">                    System.out.println(<span class="string">&quot;对不起，对于该商品，您的资金一个也买不起0.0&quot;</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                System.out.println(<span class="string">&quot;您可以购买零食&quot;</span>+w/snacks+<span class="string">&quot;袋，还剩&quot;</span>+w%snacks+<span class="string">&quot;元&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="运行结果：-1"><a href="#运行结果：-1" class="headerlink" title="运行结果："></a>运行结果：</h1><p><img src="https://s1.ax1x.com/2023/07/09/pC2QS1S.png" alt="pC2QS1S.png"></p><p><img src="https://s1.ax1x.com/2023/07/09/pC2Qp6g.png" alt="pC2Qp6g.png"></p><p><img src="https://s1.ax1x.com/2023/07/09/pC2Q9XQ.png" alt="pC2Q9XQ.png"></p><p><strong>特殊情况</strong></p><p><img src="https://s1.ax1x.com/2023/07/09/pC28UPI.png" alt="pC28UPI.png"></p><ul><li>细节</li></ul><blockquote><p>System.<em>out</em>.print(“请输入你的资金数:”);</p></blockquote><p>一般情况下，请输入xxxxx：时使用print而不适用println排版更舒适。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;编写一个智能购物计算小程序，在一家商店有书本、铅笔、橡皮、可乐、零食5种商品，商品价格如表&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https:/</summary>
      
    
    
    
    <category term="java" scheme="https://bdta-zky.github.io/categories/java/"/>
    
    <category term="算法模拟题" scheme="https://bdta-zky.github.io/categories/java/%E7%AE%97%E6%B3%95%E6%A8%A1%E6%8B%9F%E9%A2%98/"/>
    
    
    <category term="java" scheme="https://bdta-zky.github.io/tags/java/"/>
    
    <category term="算法模拟题a" scheme="https://bdta-zky.github.io/tags/%E7%AE%97%E6%B3%95%E6%A8%A1%E6%8B%9F%E9%A2%98a/"/>
    
  </entry>
  
  <entry>
    <title>数字加密和解密</title>
    <link href="https://bdta-zky.github.io/%E6%95%B0%E5%AD%97%E5%8A%A0%E5%AF%86%E5%92%8C%E8%A7%A3%E5%AF%86/"/>
    <id>https://bdta-zky.github.io/%E6%95%B0%E5%AD%97%E5%8A%A0%E5%AF%86%E5%92%8C%E8%A7%A3%E5%AF%86/</id>
    <published>2023-07-08T13:56:43.000Z</published>
    <updated>2023-09-26T01:35:01.200Z</updated>
    
    <content type="html"><![CDATA[<h1 id="需求："><a href="#需求：" class="headerlink" title="需求："></a>需求：</h1><p>某系统的数字密码(大于0) 比如1983，采用加密方式进行传输</p><h2 id="规则如下"><a href="#规则如下" class="headerlink" title="规则如下:"></a>规则如下:</h2><p>每位数加上5</p><p>再对10求余</p><p>最后将所有数字反转得到一串新数。</p><h1 id="加密："><a href="#加密：" class="headerlink" title="加密："></a>加密：</h1><p><strong>思路：</strong></p><blockquote><p>1.把整数里面的每一位放到数组中</p><p>2.加密</p><p>3.把数组里面的每一个数字进行拼接，变成加密之后的结果</p></blockquote><h2 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner</span><br><span class="line"> </span><br><span class="line">        </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test6</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//键盘录入密码</span></span><br><span class="line">        Scanner sc=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入密码:&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">        <span class="comment">//一.将数字转换到数组中</span></span><br><span class="line"> </span><br><span class="line">        <span class="type">int</span> temp=number;<span class="comment">//number初始值</span></span><br><span class="line">        <span class="comment">//1.获取数组长度count</span></span><br><span class="line">        <span class="type">int</span> count=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(number!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//每循环一次就去掉最右边的数字</span></span><br><span class="line">            number=number/<span class="number">10</span>;</span><br><span class="line">            <span class="comment">//循环一次计数器加一次</span></span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//2.将数字存入数组中</span></span><br><span class="line">            <span class="comment">//动态分配（定义数组）</span></span><br><span class="line">        <span class="type">int</span>[] arr=<span class="keyword">new</span> <span class="title class_">int</span>[count];</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> (count-<span class="number">1</span>); i &gt;=<span class="number">0</span>; i--) &#123;</span><br><span class="line">            arr[i]=temp%<span class="number">10</span>;<span class="comment">//将个位数字赋给数组</span></span><br><span class="line">            temp=temp/<span class="number">10</span>;<span class="comment">//将个位数字删除</span></span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//二.数组中每项加五</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">            arr[i]+=<span class="number">5</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//三.每项对10求余</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">            arr[i]=arr[i]%<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//四.将所有数字反转</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>,j=(count-<span class="number">1</span>); i &lt; j; i++,j--) &#123;</span><br><span class="line">            temp=arr[i];</span><br><span class="line">            arr[i]=arr[j];</span><br><span class="line">            arr[j]=temp;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//五.输出</span></span><br><span class="line">        <span class="comment">//直接遍历输出数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">            System.out.print(arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="难点："><a href="#难点：" class="headerlink" title="难点："></a>难点：</h3><p>第一步.将一个整数转入数组、</p><p>1.利用取余、取模获取和删除最右边的数字</p><p>2.定义一个变量作为计数器，删除数字的次数就是数字的位数即需要定义的数组长</p><h1 id="解密："><a href="#解密：" class="headerlink" title="解密："></a>解密：</h1><p><img src="https://s1.ax1x.com/2023/07/08/pCgaoRA.png" alt="pCgaoRA.png"></p><p>如图所示，反转加密的过程。</p><h3 id="难点：-1"><a href="#难点：-1" class="headerlink" title="难点："></a>难点：</h3><p>由于加密是对10取余的方式进行获取的，因此解密的时候需要进行判断，0<del>4之间加10，5</del>9之间不变</p><h2 id="代码实现：-1"><a href="#代码实现：-1" class="headerlink" title="代码实现："></a>代码实现：</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test7</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//键盘录入加密后的密码</span></span><br><span class="line">        Scanner sc=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> number=sc.nextInt();</span><br><span class="line">        <span class="type">int</span> temp=number;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//一.先将数字转入数组中</span></span><br><span class="line">        <span class="comment">//1.获取数组长度</span></span><br><span class="line">        <span class="type">int</span> count=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(number!=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//每循环一次就去除一个最右边的数字</span></span><br><span class="line">            number=number/<span class="number">10</span>;</span><br><span class="line">            <span class="comment">//每循环一次，计数器加一</span></span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//2.定义数组</span></span><br><span class="line">        <span class="type">int</span>[] arr=<span class="keyword">new</span> <span class="title class_">int</span>[count];</span><br><span class="line">            <span class="comment">//</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> (count-<span class="number">1</span>); i &gt;=<span class="number">0</span> ; i--) &#123;</span><br><span class="line">            arr[i]=temp%<span class="number">10</span>;<span class="comment">//将个位数字赋给数组</span></span><br><span class="line">            temp=temp/<span class="number">10</span>;<span class="comment">//将个位数字删除</span></span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//二.反转</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>,j=(count-<span class="number">1</span>); i &lt; j ; i++,j--) &#123;</span><br><span class="line">            temp=arr[i];</span><br><span class="line">            arr[i]=arr[j];</span><br><span class="line">            arr[j]=temp;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//三.由于加密是对10取余的方式进行获取的，因此解密的时候需要进行判断，0~4之间加10，5~9之间不变</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[i]&gt;=<span class="number">0</span>&amp;&amp;arr[i]&lt;=<span class="number">4</span>)&#123;</span><br><span class="line">                arr[i]+=<span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//四.每位减5</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">            arr[i]-=<span class="number">5</span>;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//五.输出</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">            System.out.print(arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;需求：&quot;&gt;&lt;a href=&quot;#需求：&quot; class=&quot;headerlink&quot; title=&quot;需求：&quot;&gt;&lt;/a&gt;需求：&lt;/h1&gt;&lt;p&gt;某系统的数字密码(大于0) 比如1983，采用加密方式进行传输&lt;/p&gt;
&lt;h2 id=&quot;规则如下&quot;&gt;&lt;a href=&quot;#规则如下&quot; </summary>
      
    
    
    
    <category term="java" scheme="https://bdta-zky.github.io/categories/java/"/>
    
    <category term="算法模拟题" scheme="https://bdta-zky.github.io/categories/java/%E7%AE%97%E6%B3%95%E6%A8%A1%E6%8B%9F%E9%A2%98/"/>
    
    
    <category term="java" scheme="https://bdta-zky.github.io/tags/java/"/>
    
    <category term="算法模拟题" scheme="https://bdta-zky.github.io/tags/%E7%AE%97%E6%B3%95%E6%A8%A1%E6%8B%9F%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>计算球体积(JAVA)</title>
    <link href="https://bdta-zky.github.io/%E8%AE%A1%E7%AE%97%E7%90%83%E4%BD%93%E7%A7%AF/"/>
    <id>https://bdta-zky.github.io/%E8%AE%A1%E7%AE%97%E7%90%83%E4%BD%93%E7%A7%AF/</id>
    <published>2023-07-08T13:52:20.000Z</published>
    <updated>2023-09-26T02:25:53.515Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>根据输入的半径值，计算球的体积。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入数据有多组，每组占一行，每行包括一个实数，表示球的半径。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出对应的球的体积，对于每组输入数据，输出一行，计算结果保留三位小数。</p><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><blockquote><p>1<br>1.5</p></blockquote><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><blockquote><p>4.189<br>14.137</p></blockquote><h1 id="代码实例"><a href="#代码实例" class="headerlink" title="代码实例"></a>代码实例</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;                                      </span><br><span class="line">                                                               </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Rumen01</span> &#123;                                         </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;                   </span><br><span class="line">       Scanner sc=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);                      </span><br><span class="line">       <span class="keyword">while</span>(sc.hasNext()) &#123;                                   </span><br><span class="line">           <span class="type">double</span> <span class="variable">a</span> <span class="operator">=</span> sc.nextDouble();                         </span><br><span class="line">           <span class="type">double</span> <span class="variable">a1</span> <span class="operator">=</span> (<span class="number">4.0</span> / <span class="number">3</span>) * Math.PI * Math.pow(a, <span class="number">3</span>);   </span><br><span class="line">           System.out.printf(<span class="string">&quot;%.3f\n&quot;</span>, a1);                    </span><br><span class="line">       &#125;                                                       </span><br><span class="line">    &#125;                                                          </span><br><span class="line">&#125;                                                              </span><br></pre></td></tr></table></figure><h1 id="结果实例"><a href="#结果实例" class="headerlink" title="结果实例"></a>结果实例</h1><p><img src="https://s1.ax1x.com/2023/07/08/pCgacKx.png" alt="pCgacKx.png"></p><p><img src="https://s1.ax1x.com/2023/07/08/pCga2qK.png" alt="pCga2qK.png"></p><h1 id="重点"><a href="#重点" class="headerlink" title="重点"></a>重点</h1><p><strong>一.</strong><br>Scanner sc = new Scanner(System.in);此句 表示从控制台获取数据，</p><p>sc.hasNext() 表示你是否有输入数据，</p><p>while语句块 表示当你输入数据的时候，就执行输出sc.next()（输出内容）</p><p>所以只要你输入数据了，它就可以执行。</p><p>参考资料：<br>CSDN博主「realzhangsan」的原创文章</p><p>原文链接：<a href="https://blog.csdn.net/hanqingupc/article/details/121799598">https://blog.csdn.net/hanqingupc/article/details/121799598</a></p><p><strong>二.</strong><br>易错点：<br>4/3的时候要记得类型转换，因为如果不进行类型转换，编译器会将4/3当做整数运算，导致运算的结果会向下取整，使得运行的结果比正确的结果小。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h1&gt;&lt;p&gt;根据输入的半径值，计算球的体积。&lt;/p&gt;
&lt;h2 id=&quot;输入格式&quot;&gt;&lt;a href=&quot;#输入格式&quot; class=&quot;head</summary>
      
    
    
    
    <category term="java" scheme="https://bdta-zky.github.io/categories/java/"/>
    
    <category term="算法模拟题" scheme="https://bdta-zky.github.io/categories/java/%E7%AE%97%E6%B3%95%E6%A8%A1%E6%8B%9F%E9%A2%98/"/>
    
    
    <category term="java" scheme="https://bdta-zky.github.io/tags/java/"/>
    
    <category term="算法模拟题" scheme="https://bdta-zky.github.io/tags/%E7%AE%97%E6%B3%95%E6%A8%A1%E6%8B%9F%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>计算矩阵边缘元素之和(JAVA)</title>
    <link href="https://bdta-zky.github.io/%E8%AE%A1%E7%AE%97%E7%9F%A9%E9%98%B5%E8%BE%B9%E7%BC%98%E5%85%83%E7%B4%A0%E4%B9%8B%E5%92%8C%EF%BC%88java%E7%AE%97%E6%B3%95%E4%BC%98%E5%8C%96%EF%BC%89/"/>
    <id>https://bdta-zky.github.io/%E8%AE%A1%E7%AE%97%E7%9F%A9%E9%98%B5%E8%BE%B9%E7%BC%98%E5%85%83%E7%B4%A0%E4%B9%8B%E5%92%8C%EF%BC%88java%E7%AE%97%E6%B3%95%E4%BC%98%E5%8C%96%EF%BC%89/</id>
    <published>2023-07-08T13:49:23.000Z</published>
    <updated>2023-09-26T02:26:02.351Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>输入一个整数矩阵，计算位于矩阵边缘的元素之和。所谓矩阵边缘的元素，就是第一行和最后一行的元素以及第一列和最后一列的元素。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>第一行分别为矩阵的行数m和列数n（m &lt; 100，n &lt; 100），两者之间以一个空格分开。</p><p>接下来输入的m行数据中，每行包含n个整数，整数之间以一个空格分开。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出对应矩阵的边缘元素和。</p><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><blockquote><p>3 3<br>3 4 1<br>3 7 1<br>2 0 1</p></blockquote><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><blockquote><p>15</p></blockquote><h1 id="代码1"><a href="#代码1" class="headerlink" title="代码1"></a>代码1</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">T2878</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Scanner sc=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> m=sc.nextInt();</span><br><span class="line">        <span class="type">int</span> n=sc.nextInt();</span><br><span class="line">        <span class="type">int</span>[][] arr=<span class="keyword">new</span> <span class="title class_">int</span>[m][n];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">                arr[i][j]=sc.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            sum+=(arr[<span class="number">0</span>][i]+arr[m-<span class="number">1</span>][i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n-<span class="number">1</span>;i++)&#123;</span><br><span class="line">            sum+=(arr[i][<span class="number">0</span>]+arr[<span class="number">1</span>][n-<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sum);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="结果实例"><a href="#结果实例" class="headerlink" title="结果实例"></a>结果实例</h2><p><img src="https://s1.ax1x.com/2023/07/08/pCgaVgI.png" alt="pCgaVgI.png"></p><p><strong>代码运行正确，但是内存过大，运行时间长</strong></p><h1 id="优化算法"><a href="#优化算法" class="headerlink" title="优化算法"></a>优化算法</h1><p><img src="https://s1.ax1x.com/2023/07/08/pCgaZvt.png" alt="pCgaZvt.png"></p><p>分析代码可知，当i=0或i=m-1或j=0或j=n-1时符合条件，且互不干扰不重复，因此可写为</p><blockquote><p><strong>i==0||j==0||i==m-1||j==n-1</strong></p></blockquote><h1 id="代码2"><a href="#代码2" class="headerlink" title="代码2"></a>代码2</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">T2878new</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Scanner sc=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> m=sc.nextInt();</span><br><span class="line">        <span class="type">int</span> n=sc.nextInt();</span><br><span class="line">        <span class="type">int</span>[][] arr=<span class="keyword">new</span> <span class="title class_">int</span>[m][n];</span><br><span class="line">        <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">                arr[i][j]=sc.nextInt();</span><br><span class="line">                <span class="keyword">if</span>(i==<span class="number">0</span>||j==<span class="number">0</span>||i==m-<span class="number">1</span>||j==n-<span class="number">1</span>)&#123;</span><br><span class="line">                    sum+=arr[i][j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h1&gt;&lt;p&gt;输入一个整数矩阵，计算位于矩阵边缘的元素之和。所谓矩阵边缘的元素，就是第一行和最后一行的元素以及第一列和最后一列的元素。&lt;/</summary>
      
    
    
    
    <category term="java" scheme="https://bdta-zky.github.io/categories/java/"/>
    
    <category term="算法模拟题" scheme="https://bdta-zky.github.io/categories/java/%E7%AE%97%E6%B3%95%E6%A8%A1%E6%8B%9F%E9%A2%98/"/>
    
    
    <category term="java" scheme="https://bdta-zky.github.io/tags/java/"/>
    
    <category term="算法模拟题" scheme="https://bdta-zky.github.io/tags/%E7%AE%97%E6%B3%95%E6%A8%A1%E6%8B%9F%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>链表数据求和操作(JAVA)</title>
    <link href="https://bdta-zky.github.io/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E9%93%BE%E8%A1%A8%E6%95%B0%E6%8D%AE%E6%B1%82%E5%92%8C%E6%93%8D%E4%BD%9C/"/>
    <id>https://bdta-zky.github.io/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E9%93%BE%E8%A1%A8%E6%95%B0%E6%8D%AE%E6%B1%82%E5%92%8C%E6%93%8D%E4%BD%9C/</id>
    <published>2023-07-08T13:47:42.000Z</published>
    <updated>2023-09-26T02:24:25.837Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>读入10个复数，建立对应<a href="https://so.csdn.net/so/search?q=%E9%93%BE%E8%A1%A8&spm=1001.2101.3001.7020">链表</a>，然后求所有复数的和。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>无</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>无</p><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><p>1 2</p><p>1 3</p><p>4 5</p><p>2 3</p><p>3 1</p><p>2 1</p><p>4 2</p><p>2 2</p><p>3 3</p><p>1 1</p><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><p>23+23i</p><h1 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Scanner sc=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> asum=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> bsum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="type">int</span> a=sc.nextInt();</span><br><span class="line">            <span class="type">int</span> b=sc.nextInt();</span><br><span class="line">            asum+=a;</span><br><span class="line">            bsum+=b;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print(asum);</span><br><span class="line">        <span class="keyword">if</span>(bsum&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;+&quot;</span>+bsum+<span class="string">&quot;i&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(bsum&lt;<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;-&quot;</span>+bsum+<span class="string">&quot;i&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="结果实例"><a href="#结果实例" class="headerlink" title="结果实例"></a>结果实例</h1><p><img src="https://s1.ax1x.com/2023/07/08/pCgaACd.png" alt="pCgaACd.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h1&gt;&lt;p&gt;读入10个复数，建立对应&lt;a href=&quot;https://so.csdn.net/so/search?q=%E9%93%BE</summary>
      
    
    
    
    <category term="java" scheme="https://bdta-zky.github.io/categories/java/"/>
    
    <category term="蓝桥杯真题" scheme="https://bdta-zky.github.io/categories/java/%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%9C%9F%E9%A2%98/"/>
    
    
    <category term="java" scheme="https://bdta-zky.github.io/tags/java/"/>
    
    <category term="蓝桥杯" scheme="https://bdta-zky.github.io/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
  </entry>
  
  <entry>
    <title>成绩排序(JAVA)</title>
    <link href="https://bdta-zky.github.io/%E6%88%90%E7%BB%A9%E6%8E%92%E5%BA%8F%EF%BC%88java%EF%BC%89/"/>
    <id>https://bdta-zky.github.io/%E6%88%90%E7%BB%A9%E6%8E%92%E5%BA%8F%EF%BC%88java%EF%BC%89/</id>
    <published>2023-07-08T13:44:41.000Z</published>
    <updated>2023-09-26T01:47:22.439Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>给出班里某门课程的成绩单，请你按成绩从高到低对成绩单排序输出，如果有相同分数则名字字典序小的在前。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>第一行为n (0 &lt; n &lt; 20)，表示班里的学生数目；</p><p>接下来的n行，每行为每个学生的名字和他的成绩, 中间用单个空格隔开。名字只包含字母且长度不超过20，成绩为一个不大于100的非负整数。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>把成绩单按分数从高到低的顺序进行排序并输出，每行包含名字和分数两项，之间有一个空格。</p><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><blockquote><p>4</p><p>Kitty 80</p><p>Hanmeimei 90</p><p>Joey 92</p><p>Tim 28</p></blockquote><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><blockquote><p>Joey 92</p><p>Hanmeimei 90</p><p>Kitty 80</p><p>Tim 28</p></blockquote><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>1.定义一个student结构体</p><p>2.排序（根据成绩</p><p>3.特殊情况（分数相同时根据名字字典序进行排序，利用compareto方法）</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Chengjifenxi</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//定义结构体并初始化</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">student</span> &#123;</span><br><span class="line">        String name=<span class="string">&quot;&quot;</span>;<span class="comment">//名字</span></span><br><span class="line">        <span class="type">int</span> score=<span class="number">0</span>;<span class="comment">//成绩</span></span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//给出n名学生</span></span><br><span class="line">        Scanner sc=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> n=sc.nextInt();</span><br><span class="line">        <span class="comment">//开辟结构体数组</span></span><br><span class="line">        student stu[]=<span class="keyword">new</span> <span class="title class_">student</span>[n];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            stu[i]=<span class="keyword">new</span> <span class="title class_">student</span>();<span class="comment">//&lt;&lt;注意这里</span></span><br><span class="line">            stu[i].name=sc.next();</span><br><span class="line">            stu[i].score=sc.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//根据成绩冒泡排序</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; n-i-<span class="number">1</span>; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(stu[j].score&lt;stu[j+<span class="number">1</span>].score)&#123;</span><br><span class="line">                    student temp=stu[j];</span><br><span class="line">                    stu[j]=stu[j+<span class="number">1</span>];</span><br><span class="line">                    stu[j+<span class="number">1</span>]=temp;</span><br><span class="line">                    <span class="comment">//如果有相同分数则名字字典序小的在前。</span></span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(stu[j].score==stu[j+<span class="number">1</span>].score) &#123;</span><br><span class="line">                    <span class="comment">//利用compareto方法对字符串进行字典序排序</span></span><br><span class="line">                    <span class="keyword">if</span>(stu[j].name.compareTo(stu[j+<span class="number">1</span>].name)&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                        student temp=stu[j];</span><br><span class="line">                        stu[j]=stu[j+<span class="number">1</span>];</span><br><span class="line">                        stu[j+<span class="number">1</span>]=temp;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//输出排序后的结果</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            System.out.println(stu[i].name+<span class="string">&quot; &quot;</span>+stu[i].score);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="结果实例"><a href="#结果实例" class="headerlink" title="结果实例"></a>结果实例</h1><p><img src="https://s1.ax1x.com/2023/07/08/pCgapDK.png" alt="pCgapDK.png"></p><h1 id="java中string类的常用方法"><a href="#java中string类的常用方法" class="headerlink" title="java中string类的常用方法"></a>java中string类的常用方法</h1><p><a href="http://t.csdn.cn/L8jOo%EF%BC%88%E4%BD%9C%E8%80%85%EF%BC%9A%E5%8C%97%E9%A3%8E%EF%BC%89">http://t.csdn.cn/L8jOo（作者：北风）</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h1&gt;&lt;p&gt;给出班里某门课程的成绩单，请你按成绩从高到低对成绩单排序输出，如果有相同分数则名字字典序小的在前。&lt;/p&gt;
&lt;h2 id=&quot;</summary>
      
    
    
    
    <category term="java" scheme="https://bdta-zky.github.io/categories/java/"/>
    
    <category term="蓝桥杯" scheme="https://bdta-zky.github.io/categories/java/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    
    <category term="java" scheme="https://bdta-zky.github.io/tags/java/"/>
    
    <category term="蓝桥杯" scheme="https://bdta-zky.github.io/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
  </entry>
  
  <entry>
    <title>蛇形填数(JAVA)</title>
    <link href="https://bdta-zky.github.io/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E8%9B%87%E5%BD%A2%E5%A1%AB%E6%95%B0/"/>
    <id>https://bdta-zky.github.io/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E8%9B%87%E5%BD%A2%E5%A1%AB%E6%95%B0/</id>
    <published>2023-07-08T13:42:31.000Z</published>
    <updated>2023-09-26T02:23:36.555Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h1><p><strong>本题为填空题，只需要算出结果后，在代码中使用输出语句将所填结果输出即可。</strong></p><p>如下图所示，小明用从 11 开始的正整数“蛇形”填充无限大的矩阵。</p><blockquote><p>1 2 6 7 15 …<br>3 5 8 14 …<br>4 9 13 …<br>10 12 …<br>11 ……</p></blockquote><p>容易看出矩阵第二行第二列中的数是 55。请你计算矩阵中第 2020 行第 2020 列的数是多少？</p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//第一行第一列是1,第二行第二列是5,第三行第三列是13</span></span><br><span class="line">        <span class="comment">//即1,5,13,25,41....</span></span><br><span class="line">        <span class="comment">//规律:n1 = 1 + 4 * 0(第一行)</span></span><br><span class="line">        <span class="comment">//       n2 = n1 + 4 * 1(第二行)</span></span><br><span class="line">        <span class="comment">//       n3 = n2 + 4 * 2(第三行)</span></span><br><span class="line">        <span class="comment">//       .....</span></span><br><span class="line">        <span class="comment">//     n = n + 4 * (行数 - 1)</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">25</span>; i++) &#123;</span><br><span class="line">            n = n + <span class="number">4</span> * i;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">19</span>) &#123;</span><br><span class="line">                System.out.println(n);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;&lt;strong&gt;题目描述&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;本题为填空题，只需要算出结果后，在代码中使用输出语句将所填结果输出即可。&lt;</summary>
      
    
    
    
    <category term="java" scheme="https://bdta-zky.github.io/categories/java/"/>
    
    <category term="蓝桥杯真题" scheme="https://bdta-zky.github.io/categories/java/%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%9C%9F%E9%A2%98/"/>
    
    <category term="2020年省赛" scheme="https://bdta-zky.github.io/categories/java/%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%9C%9F%E9%A2%98/2020%E5%B9%B4%E7%9C%81%E8%B5%9B/"/>
    
    
    <category term="java" scheme="https://bdta-zky.github.io/tags/java/"/>
    
    <category term="蓝桥杯" scheme="https://bdta-zky.github.io/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
  </entry>
  
  <entry>
    <title>既约分数(JAVA)</title>
    <link href="https://bdta-zky.github.io/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E6%97%A2%E7%BA%A6%E5%88%86%E6%95%B0/"/>
    <id>https://bdta-zky.github.io/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E6%97%A2%E7%BA%A6%E5%88%86%E6%95%B0/</id>
    <published>2023-07-08T13:39:25.000Z</published>
    <updated>2023-09-26T02:25:05.475Z</updated>
    
    <content type="html"><![CDATA[<p>如果一个分数的分子和分母的最大公约数是 1，这个分数称为既约分数。</p><p>例如4/3,8/1,1/7， 都是既约分数。</p><p>请问，有多少个既约分数，分子和分母都是 1 到 2020 之间的整数（包括 1和2020）？</p><h2 id="运行限制"><a href="#运行限制" class="headerlink" title="运行限制"></a>运行限制</h2><p>最大运行时间：2s</p><p>最大运行内存: 128M</p><h1 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">ans</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span> ; i &lt;= <span class="number">2020</span> ; i ++)&#123;</span><br><span class="line">          <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span> ; j &lt;= <span class="number">2020</span> ; j ++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(gcd(i , j) == <span class="number">1</span>) ans ++;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">gcd</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(b == <span class="number">0</span>) <span class="keyword">return</span> a;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">return</span> gcd(b , a % b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;如果一个分数的分子和分母的最大公约数是 1，这个分数称为既约分数。&lt;/p&gt;
&lt;p&gt;例如4/3,8/1,1/7， 都是既约分数。&lt;/p&gt;
&lt;p&gt;请问，有多少个既约分数，分子和分母都是 1 到 2020 之间的整数（包括 1和2020）？&lt;/p&gt;
&lt;h2 id=&quot;运行限制&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="java" scheme="https://bdta-zky.github.io/categories/java/"/>
    
    <category term="蓝桥杯真题" scheme="https://bdta-zky.github.io/categories/java/%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%9C%9F%E9%A2%98/"/>
    
    <category term="2020年省赛" scheme="https://bdta-zky.github.io/categories/java/%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%9C%9F%E9%A2%98/2020%E5%B9%B4%E7%9C%81%E8%B5%9B/"/>
    
    
    <category term="java" scheme="https://bdta-zky.github.io/tags/java/"/>
    
    <category term="蓝桥杯" scheme="https://bdta-zky.github.io/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
  </entry>
  
  <entry>
    <title>数字三角形(JAVA)</title>
    <link href="https://bdta-zky.github.io/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E6%95%B0%E5%AD%97%E4%B8%89%E8%A7%92%E5%BD%A2%EF%BC%88java%EF%BC%89/"/>
    <id>https://bdta-zky.github.io/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E6%95%B0%E5%AD%97%E4%B8%89%E8%A7%92%E5%BD%A2%EF%BC%88java%EF%BC%89/</id>
    <published>2023-07-08T13:33:58.000Z</published>
    <updated>2023-09-26T02:23:25.014Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h1><p><img src="https://s1.ax1x.com/2023/07/08/pCgUJ0O.png" alt="pCgUJ0O.png"></p><p>上图给出了一个数字三角形。从三角形的顶部到底部有很多条不同的路径。对于每条路径，把路径上面的数加起来可以得到一个和，你的任务就是找到最大的和。</p><p>路径上的每一步只能从一个数走到下一层和它最近的左边的那个数或者右 边的那个数。此外，向左下走的次数与向右下走的次数相差不能超过 1。</p><h2 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述"></a>输入描述</h2><p>输入的第一行包含一个整数N (1≤N≤100)，表示三角形的行数。</p><p>下面的 N 行给出数字三角形。数字三角形上的数都是 0 至 100 之间的整数。</p><h2 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述"></a>输出描述</h2><p>输出一个整数，表示答案。</p><h1 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h1><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><blockquote><p>5<br>7<br>3 8<br>8 1 0<br>2 7 4 4<br>4 5 2 6 5</p></blockquote><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><blockquote><p>27</p></blockquote><h3 id="运行限制"><a href="#运行限制" class="headerlink" title="运行限制"></a><strong>运行限制</strong></h3><ul><li><p>最大运行时间：1s</p></li><li><p>最大运行内存: 256M</p></li></ul><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">      <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Scanner sc=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> n=sc.nextInt();</span><br><span class="line">        <span class="type">int</span> [][]a=<span class="keyword">new</span> <span class="title class_">int</span>[n][n];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt;=i; j++) &#123;</span><br><span class="line">                a[i][j]=sc.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> dp[][]=<span class="keyword">new</span> <span class="title class_">int</span>[n][n];<span class="comment">//初始化dp，对最后一行中间赋值</span></span><br><span class="line">        <span class="comment">//因为向左下走的次数与向右下走的次数相差不能超过1</span></span><br><span class="line">        <span class="comment">//所以如果输入N为奇数，那么最后一定会走到最后一行中间的位置</span></span><br><span class="line">        <span class="comment">//如果输入N为偶数，那么最后一定会走到中间两个的其中之一</span></span><br><span class="line">        <span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            dp[n-<span class="number">1</span>][n/<span class="number">2</span>]=a[n-<span class="number">1</span>][n/<span class="number">2</span>];</span><br><span class="line">            dp[n-<span class="number">1</span>][n/<span class="number">2</span>-<span class="number">1</span>]=a[n-<span class="number">1</span>][n/<span class="number">2</span>-<span class="number">1</span>];</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            dp[n-<span class="number">1</span>][n/<span class="number">2</span>]=a[n-<span class="number">1</span>][n/<span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> n-<span class="number">2</span>; i &gt;=<span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt;= i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(dp[i+<span class="number">1</span>][j]!=<span class="number">0</span>||dp[i+<span class="number">1</span>][j+<span class="number">1</span>]!=<span class="number">0</span>)&#123;</span><br><span class="line">                    dp[i][j]= Math.max(dp[i+<span class="number">1</span>][j],dp[i+<span class="number">1</span>][j+<span class="number">1</span>])+a[i][j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(dp[<span class="number">0</span>][<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="结果实例"><a href="#结果实例" class="headerlink" title="结果实例"></a>结果实例</h1><p><a href="https://imgse.com/i/pCgUDjP"><img src="https://s1.ax1x.com/2023/07/08/pCgUDjP.png" alt="pCgUDjP.png"></a></p><h1 id="经典的数塔问题"><a href="#经典的数塔问题" class="headerlink" title="经典的数塔问题"></a><strong>经典的数塔问题</strong></h1><p><a href="https://imgse.com/i/pCgUyB8"><img src="https://s1.ax1x.com/2023/07/08/pCgUyB8.png" alt="pCgUyB8.png"></a></p><p>比如3-&gt;7-&gt;2-&gt;9这个路径，他的路径和是3+7+2+9</p><p>不难发现如果要求到9的最大路径和，首先要求出他前一层的最大路径</p><p>核心代码dp[i][j]=max(dp[i-1][j],dp[i-1][j+1])+a[i][j]</p><p>dp[i][j]（9的最大路径和)</p><p>a[i][j]（9自己）</p><p>dp[i-1][j]（前一层5的最大路径和）dp[i-1][j+1]（前一层2的最大路径和）</p><p>在前一层的最大路径和取大的那一个</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;&lt;strong&gt;题目描述&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2023/07/08/pCgU</summary>
      
    
    
    
    <category term="java" scheme="https://bdta-zky.github.io/categories/java/"/>
    
    <category term="蓝桥杯真题" scheme="https://bdta-zky.github.io/categories/java/%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%9C%9F%E9%A2%98/"/>
    
    <category term="2020年省赛" scheme="https://bdta-zky.github.io/categories/java/%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%9C%9F%E9%A2%98/2020%E5%B9%B4%E7%9C%81%E8%B5%9B/"/>
    
    
    <category term="java" scheme="https://bdta-zky.github.io/tags/java/"/>
    
    <category term="蓝桥杯" scheme="https://bdta-zky.github.io/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
    <category term="动态规划" scheme="https://bdta-zky.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>数列求值(JAVA)</title>
    <link href="https://bdta-zky.github.io/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E6%95%B0%E5%88%97%E6%B1%82%E5%80%BC/"/>
    <id>https://bdta-zky.github.io/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E6%95%B0%E5%88%97%E6%B1%82%E5%80%BC/</id>
    <published>2023-07-08T13:29:07.000Z</published>
    <updated>2023-09-26T02:23:28.728Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p><strong>本题为填空题，只需要算出结果后，在代码中使用输出语句将所填结果输出即可。</strong></p><p>给定数列 1,1,1,3,5,9,17,⋯1,1,1,3,5,9,17,⋯，从第 4项开始，每项都是前 3 项的和。</p><p>求第 2019032420190324 项的最后 4 位数字。</p><h2 id="运行限制"><a href="#运行限制" class="headerlink" title="运行限制"></a>运行限制</h2><p>最大运行时间：1s</p><p>最大运行内存: 128M</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>类似斐波那契数列</p><h1 id="代码1"><a href="#代码1" class="headerlink" title="代码1"></a>代码1</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Lanqiao600</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> a[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">20190324</span>];</span><br><span class="line">        a[<span class="number">0</span>]=a[<span class="number">1</span>]=a[<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">3</span>; i &lt;<span class="number">20190324</span>; i++) &#123;</span><br><span class="line">            a[i]=((a[i-<span class="number">1</span>]+a[i-<span class="number">2</span>]+a[i-<span class="number">3</span>])%<span class="number">10000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(a[<span class="number">20190323</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="结果实例"><a href="#结果实例" class="headerlink" title="结果实例"></a>结果实例</h2><p><img src="https://s1.ax1x.com/2023/07/08/pCgUipn.png" alt="pCgUipn.png"></p><h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><p><strong>内存占用过大</strong></p><p><strong>改进</strong>：因为只需要输出第20190324项，所以前面几项可定义为临时变量，计算一次释放一次，动态运行。</p><h1 id="代码2（优化）"><a href="#代码2（优化）" class="headerlink" title="代码2（优化）"></a>代码2（优化）</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Lanqiao600</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> a=<span class="number">1</span>,b=<span class="number">1</span>,c=<span class="number">1</span>,d=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">3</span>; i &lt; <span class="number">20190324</span>; i++) &#123;</span><br><span class="line">            d=(a+b+c)%<span class="number">10000</span>;</span><br><span class="line">            a=b;</span><br><span class="line">            b=c;</span><br><span class="line">            c=d;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(d);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="结果实例-1"><a href="#结果实例-1" class="headerlink" title="结果实例"></a>结果实例</h2><p><img src="https://s1.ax1x.com/2023/07/08/pCgUipn.png" alt="pCgUipn.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;本题为填空题，只需要算出结果后，在代码中使用输出语句将所填结果输出即可。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;给</summary>
      
    
    
    
    <category term="java" scheme="https://bdta-zky.github.io/categories/java/"/>
    
    <category term="蓝桥杯真题" scheme="https://bdta-zky.github.io/categories/java/%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%9C%9F%E9%A2%98/"/>
    
    <category term="2019年省赛" scheme="https://bdta-zky.github.io/categories/java/%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%9C%9F%E9%A2%98/2019%E5%B9%B4%E7%9C%81%E8%B5%9B/"/>
    
    
    <category term="java" scheme="https://bdta-zky.github.io/tags/java/"/>
    
    <category term="蓝桥杯" scheme="https://bdta-zky.github.io/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
  </entry>
  
  <entry>
    <title>字符统计(JAVA)</title>
    <link href="https://bdta-zky.github.io/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E5%AD%97%E7%AC%A6%E7%BB%9F%E8%AE%A1/"/>
    <id>https://bdta-zky.github.io/%E8%93%9D%E6%A1%A5%E6%9D%AF-%E5%AD%97%E7%AC%A6%E7%BB%9F%E8%AE%A1/</id>
    <published>2023-07-08T13:23:26.000Z</published>
    <updated>2023-09-26T02:23:13.024Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>给定一个只包含大写字母的字符串 S，请你输出其中出现次数最多的字母。</p><p>如果有多个字母均出现了最多次，按字母表顺序依次输出所有这些字母。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>一个只包含大写字母的字符串 S .</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>若干个大写字母，代表答案。</p><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><p>BABBACAC</p><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><p>AB</p><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>对于 100% 的评测用例，1 ≤ |S | ≤ 106 .</p><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>定义一个长度为26的数组，作为计数器，分别对应A<del>Z，记录A</del>Z每个字母出现的次数</p><p>然后输出最大值a【i】</p><h2 id="特殊情况："><a href="#特殊情况：" class="headerlink" title="特殊情况："></a>特殊情况：</h2><p>若两个及以上字母出现次数均为max，则可利用for循环，对max之后的a【i】与max进行比较，a【i】的顺序也正好为字典序，符合题意。</p><h1 id="代码实例"><a href="#代码实例" class="headerlink" title="代码实例"></a>代码实例</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Lanqiao2672</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Scanner sc=<span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        String s=sc.next();   <span class="comment">//键盘录入字符串S</span></span><br><span class="line">        <span class="type">int</span> a[]=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">26</span>];    <span class="comment">//定义一个长度为26的数组记录每个字母出现的次数</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//将每个字符分别与A~Z进行比较，ASCII值相等的对应数组a【i】++；</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; s.length(); i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">65</span>; j &lt; <span class="number">91</span>; j++) &#123;   </span><br><span class="line">                <span class="keyword">if</span>((<span class="type">int</span>)s.charAt(i)==j)</span><br><span class="line">                    a[j-<span class="number">65</span>]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//求出数组a的最大值</span></span><br><span class="line">        <span class="type">int</span> max=a[<span class="number">0</span>];</span><br><span class="line">        <span class="type">int</span> maxi=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; a.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (a[i] &gt; max) &#123;</span><br><span class="line">                max = a[i];</span><br><span class="line">                maxi = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断最大值相等情况，按照字典序输出则正好按照a【i】i值由小到大排列</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> maxi; i &lt; a.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]==a[maxi])&#123;</span><br><span class="line">                System.out.print((<span class="type">char</span>)(i+<span class="number">65</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="结果实例"><a href="#结果实例" class="headerlink" title="结果实例"></a>结果实例</h1><p><img src="https://s1.ax1x.com/2023/07/08/pCgUpkQ.png" alt="pCgUpkQ.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h1&gt;&lt;p&gt;给定一个只包含大写字母的字符串 S，请你输出其中出现次数最多的字母。&lt;/p&gt;
&lt;p&gt;如果有多个字母均出现了最多次，按字母表顺</summary>
      
    
    
    
    <category term="java" scheme="https://bdta-zky.github.io/categories/java/"/>
    
    <category term="蓝桥杯真题" scheme="https://bdta-zky.github.io/categories/java/%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%9C%9F%E9%A2%98/"/>
    
    <category term="2022年省赛" scheme="https://bdta-zky.github.io/categories/java/%E8%93%9D%E6%A1%A5%E6%9D%AF%E7%9C%9F%E9%A2%98/2022%E5%B9%B4%E7%9C%81%E8%B5%9B/"/>
    
    
    <category term="java" scheme="https://bdta-zky.github.io/tags/java/"/>
    
    <category term="蓝桥杯" scheme="https://bdta-zky.github.io/tags/%E8%93%9D%E6%A1%A5%E6%9D%AF/"/>
    
  </entry>
  
  <entry>
    <title>案例3-1 基于控制台的购书系统</title>
    <link href="https://bdta-zky.github.io/%E6%A1%88%E4%BE%8B3-1-%E5%9F%BA%E4%BA%8E%E6%8E%A7%E5%88%B6%E5%8F%B0%E7%9A%84%E8%B4%AD%E4%B9%A6%E7%B3%BB%E7%BB%9F/"/>
    <id>https://bdta-zky.github.io/%E6%A1%88%E4%BE%8B3-1-%E5%9F%BA%E4%BA%8E%E6%8E%A7%E5%88%B6%E5%8F%B0%E7%9A%84%E8%B4%AD%E4%B9%A6%E7%B3%BB%E7%BB%9F/</id>
    <published>2023-07-08T13:21:01.000Z</published>
    <updated>2023-09-26T02:31:36.305Z</updated>
    
    <content type="html"><![CDATA[<p>伴随互联网的蓬勃发展，网络购书系统作为电子商务的一种形式正以其高效、低成本的优势逐步成为新兴的经营模式，人们已经不再满足互联网的用途仅仅局限于信息的浏览和发布，更渴望着能够充分享受互联网带来的更多便利。网络购书系统正适应了当今社会快节奏地生活，使顾客足不出户便可以方便快捷轻松地选购自己喜欢的图书</p><p>本案例要求，使用所学知识编写一个基于控制台的购书系统，实现购书功能。程序输出所有图书的信息，包括每本书的编号、书名、单价、库存顾客购书时，根据提示输入图书编号选购需要的书，并根据提示输入购买书的的数量。购买完毕后输出顾客的订单信息，包括订单号、订单明细、订单总额。</p><h1 id="代码实例"><a href="#代码实例" class="headerlink" title="代码实例"></a>代码实例</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">book</span>   &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> number;   <span class="comment">// 编号</span></span><br><span class="line">    <span class="keyword">private</span> String name;   <span class="comment">// 书名</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> price;  <span class="comment">// 单价</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> kucun;      <span class="comment">// 库存</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">book</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">book</span><span class="params">(<span class="type">int</span> number, String name, <span class="type">double</span> price, <span class="type">int</span> kucun)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.number = number;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.price = price;</span><br><span class="line">        <span class="built_in">this</span>.kucun = kucun;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getNumber</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> number;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getPrice</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> price;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getKucun</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> kucun;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setKucun</span><span class="params">(<span class="type">int</span> kucun)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.kucun = kucun;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Tushu</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Tushu</span> <span class="variable">d</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Tushu</span>();   <span class="comment">// 创建对象</span></span><br><span class="line"> </span><br><span class="line">        book[] books = <span class="keyword">new</span> <span class="title class_">book</span>[<span class="number">3</span>];   <span class="comment">// 定义数组</span></span><br><span class="line">        books[<span class="number">0</span>] = <span class="keyword">new</span> <span class="title class_">book</span>(<span class="number">01</span>, <span class="string">&quot;java基础&quot;</span>, <span class="number">29.9</span>, <span class="number">100</span>);</span><br><span class="line">        books[<span class="number">1</span>] = <span class="keyword">new</span> <span class="title class_">book</span>(<span class="number">02</span>, <span class="string">&quot;数据结构&quot;</span>, <span class="number">39.9</span>, <span class="number">200</span>);</span><br><span class="line">        books[<span class="number">2</span>] = <span class="keyword">new</span> <span class="title class_">book</span>(<span class="number">03</span>, <span class="string">&quot;操作系统&quot;</span>, <span class="number">49.9</span>, <span class="number">500</span>);</span><br><span class="line"> </span><br><span class="line">        d.Put(books);     <span class="comment">// 将数组元素添加到方法中</span></span><br><span class="line">        d.Order(books);     <span class="comment">//订单</span></span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 输出图书信息</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Put</span><span class="params">(book[] ts)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;图书编号\t图书名称\t\t图书单价\t库存&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span> ; i &lt; ts.length ; i++)&#123;   <span class="comment">// 遍历数组,输出图书信息</span></span><br><span class="line">            System.out.println(ts[i].getNumber() + <span class="string">&quot;\t\t&quot;</span> + ts[i].getName() + <span class="string">&quot;\t\t&quot;</span> + ts[i].getPrice() + <span class="string">&quot;\t&quot;</span> +ts[i].getKucun());</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;----------------------------------&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 订单方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Order</span><span class="params">(book[] books)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> <span class="literal">true</span>;   <span class="comment">// 定义一个boolean变量</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">ZongJinEr</span> <span class="operator">=</span> <span class="number">0</span>;   <span class="comment">// 记录商品总额</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">Sum</span> <span class="operator">=</span> <span class="number">0</span>;     <span class="comment">// 记录购买书本件数</span></span><br><span class="line">        <span class="keyword">while</span> (b) &#123;   <span class="comment">// 使用循环使购买图书可以重复购买</span></span><br><span class="line">            <span class="type">int</span> flag=<span class="number">0</span>;     <span class="comment">//定义一个变量作为合法编号判断</span></span><br><span class="line">            System.out.println(<span class="string">&quot;请输入要购买图书的编号:&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">Bian</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入购买数量:&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span> ; i &lt; books.length ; i++)&#123;</span><br><span class="line">                <span class="comment">// 遍历数组</span></span><br><span class="line">                <span class="keyword">if</span> (Bian == books[i].getNumber())&#123;</span><br><span class="line">                    <span class="comment">// 寻找图书对应的编号</span></span><br><span class="line">                    <span class="keyword">if</span>(num&lt;=<span class="number">0</span>||num&gt;books[i].getKucun())&#123;</span><br><span class="line">                        System.out.println(<span class="string">&quot;该图书库存量为&quot;</span>+books[i].getKucun()+<span class="string">&quot;\n请重新输入！&quot;</span>);</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    books[i].setKucun(books[i].getKucun()-num);</span><br><span class="line">                    System.out.println(<span class="string">&quot;订单编号:&quot;</span> + Bian);</span><br><span class="line">                    System.out.println(<span class="string">&quot;购买书名:&quot;</span> + books[i].getName() + <span class="string">&quot;\n订单总额:&quot;</span> + num*books[i].getPrice() + <span class="string">&quot;\n交易明细,购买:&quot;</span> + books[i].getName() + num + <span class="string">&quot;本&quot;</span>);</span><br><span class="line">                    ZongJinEr += num*books[i].getPrice();   <span class="comment">// 商品价格相加</span></span><br><span class="line">                    Sum += num;    <span class="comment">// 购买件数相加</span></span><br><span class="line">                    flag++;</span><br><span class="line">                &#125;</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(flag==<span class="number">0</span>) System.out.println(<span class="string">&quot;非法编号！&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;是否继续购买:&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> in.next();</span><br><span class="line">            <span class="keyword">if</span> (s.equals(<span class="string">&quot;否&quot;</span>))&#123;   <span class="comment">// 输入否循环结束</span></span><br><span class="line">                b = <span class="literal">false</span>;</span><br><span class="line">                System.out.println(<span class="string">&quot;一共购买:&quot;</span> + Sum + <span class="string">&quot;本,共消费:&quot;</span> + ZongJinEr);   <span class="comment">// 打印购买件数,与总额</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="结果实例"><a href="#结果实例" class="headerlink" title="结果实例"></a>结果实例</h1><p><img src="https://s1.ax1x.com/2023/07/08/pCgNO6P.png" alt="pCgNO6P.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;伴随互联网的蓬勃发展，网络购书系统作为电子商务的一种形式正以其高效、低成本的优势逐步成为新兴的经营模式，人们已经不再满足互联网的用途仅仅局限于信息的浏览和发布，更渴望着能够充分享受互联网带来的更多便利。网络购书系统正适应了当今社会快节奏地生活，使顾客足不出户便可以方便快捷轻</summary>
      
    
    
    
    <category term="java" scheme="https://bdta-zky.github.io/categories/java/"/>
    
    <category term="算法模拟题" scheme="https://bdta-zky.github.io/categories/java/%E7%AE%97%E6%B3%95%E6%A8%A1%E6%8B%9F%E9%A2%98/"/>
    
    
    <category term="java" scheme="https://bdta-zky.github.io/tags/java/"/>
    
    <category term="算法模拟题" scheme="https://bdta-zky.github.io/tags/%E7%AE%97%E6%B3%95%E6%A8%A1%E6%8B%9F%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>经理与员工工资案例（java）</title>
    <link href="https://bdta-zky.github.io/%E6%A1%88%E4%BE%8B4-7-%E7%BB%8F%E7%90%86%E4%B8%8E%E5%91%98%E5%B7%A5%E5%B7%A5%E8%B5%84%E6%A1%88%E4%BE%8B/"/>
    <id>https://bdta-zky.github.io/%E6%A1%88%E4%BE%8B4-7-%E7%BB%8F%E7%90%86%E4%B8%8E%E5%91%98%E5%B7%A5%E5%B7%A5%E8%B5%84%E6%A1%88%E4%BE%8B/</id>
    <published>2023-07-08T13:08:45.000Z</published>
    <updated>2023-09-26T02:31:27.171Z</updated>
    
    <content type="html"><![CDATA[<h2 id="案例描述"><a href="#案例描述" class="headerlink" title="案例描述:"></a>案例描述:</h2><p>某公司的人员分为员工和经理两种，但经理也属于员工中的一种，公司的人员都有自己的姓名和地址，员工和经理都有自己的工号、工资、工龄等属性，但经理不同员工的是，经理有自己在公司对应的级别。假设每次给员工涨工资一次能涨10，经理能涨20%。本案例要求利用多态实现给员工和经理涨工资。</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//父类:公司人员类</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">person</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String name;     <span class="comment">//姓名</span></span><br><span class="line">    <span class="keyword">public</span> String address;  <span class="comment">//地址</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">person</span><span class="params">(String name, String address)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.name=name;</span><br><span class="line">        <span class="built_in">this</span>.address=address;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAddress</span><span class="params">(String address)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getAddress</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">()</span>&#123;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//子类:员工类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">employee</span> <span class="keyword">extends</span> <span class="title class_">person</span> &#123;</span><br><span class="line">        <span class="keyword">public</span> String id;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">double</span> salary;</span><br><span class="line">        <span class="keyword">public</span> <span class="type">int</span> age;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">employee</span><span class="params">(String name, String address,String id,<span class="type">double</span> salary,<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name, address);</span><br><span class="line">        <span class="built_in">this</span>.id=id;</span><br><span class="line">        <span class="built_in">this</span>.salary =salary;</span><br><span class="line">        <span class="built_in">this</span>.age=age;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getSalary</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> salary;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(String id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSalary</span><span class="params">(<span class="type">double</span> salary)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.salary = salary;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">()</span>&#123;</span><br><span class="line">        salary*=<span class="number">1.1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getID</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//子类:经理类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">manager</span> <span class="keyword">extends</span> <span class="title class_">employee</span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> String rank;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">manager</span><span class="params">(String name, String address, String id, <span class="type">double</span> salary, <span class="type">int</span> age,String rank)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(name, address, id, salary, age);</span><br><span class="line">        <span class="built_in">this</span>.rank=rank;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getRank</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> rank;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRank</span><span class="params">(String rank)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.rank = rank;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">()</span>&#123;</span><br><span class="line">        salary*=<span class="number">1.2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Ex4_7</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">employee</span> <span class="variable">worker</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">employee</span>(<span class="string">&quot;张三&quot;</span>, <span class="string">&quot;郑州&quot;</span>, <span class="string">&quot;1001&quot;</span>, <span class="number">4000.0</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="type">manager</span> <span class="variable">manager1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">manager</span>(<span class="string">&quot;李四&quot;</span>, <span class="string">&quot;郑州&quot;</span>, <span class="string">&quot;1122&quot;</span>, <span class="number">8000.0</span>, <span class="number">5</span>, <span class="string">&quot;经理&quot;</span>);</span><br><span class="line">        <span class="type">manager</span> <span class="variable">manager2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">manager</span>(<span class="string">&quot;王五&quot;</span>, <span class="string">&quot;郑州&quot;</span>, <span class="string">&quot;1100&quot;</span>, <span class="number">10000.0</span>, <span class="number">4</span>, <span class="string">&quot;高级经理&quot;</span>);</span><br><span class="line">        print(worker);</span><br><span class="line">        print(manager1);</span><br><span class="line">        print(manager2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">(employee a)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;----------------------普通员工信息表---------------------&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;|姓名|\t\t&quot;</span>+<span class="string">&quot;|工号|\t\t&quot;</span>+<span class="string">&quot;|工资|\t\t&quot;</span>+<span class="string">&quot;|工龄|\t\t&quot;</span>+<span class="string">&quot;|地址|&quot;</span>);</span><br><span class="line">        System.out.println(a.getName() + <span class="string">&quot;\t\t\t&quot;</span>+a.getID()+<span class="string">&quot;\t\t&quot;</span>+a.getSalary()+<span class="string">&quot;\t\t &quot;</span>+a.getAge()+<span class="string">&quot;\t\t\t&quot;</span>+a.getAddress());</span><br><span class="line">        a.add();</span><br><span class="line">        System.out.println(<span class="string">&quot;-------------------------------------------------------&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;由于&quot;</span>+a.getName()+ <span class="string">&quot;在公司辛勤工作,因此公司决定鼓励,涨薪为:&quot;</span> + a.getSalary());</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">(manager a)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;----------------------经理阶层信息表----------------------------&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;|姓名|  \t&quot;</span>+<span class="string">&quot;|工号|  \t&quot;</span>+<span class="string">&quot;|职称|  \t&quot;</span>+<span class="string">&quot;|工资|  \t&quot;</span>+<span class="string">&quot;|工龄|  \t&quot;</span>+<span class="string">&quot;|地址|&quot;</span>);</span><br><span class="line">        System.out.println(a.getName() + <span class="string">&quot;   \t&quot;</span>+a.getID()+<span class="string">&quot; \t&quot;</span>+a.getRank()+<span class="string">&quot; \t&quot;</span>+a.getSalary()+<span class="string">&quot;\t &quot;</span>+a.getAge()+<span class="string">&quot;   \t&quot;</span>+a.getAddress());</span><br><span class="line">        a.add();</span><br><span class="line">        System.out.println(<span class="string">&quot;-------------------------------------------------------------&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;由于&quot;</span>+a.getName()+ <span class="string">&quot;在公司辛勤工作,因此公司决定鼓励,涨薪为:&quot;</span> + a.getSalary());</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><p><img src="https://s1.ax1x.com/2023/07/08/pCgN5wD.png" alt="pCgN5wD.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;案例描述&quot;&gt;&lt;a href=&quot;#案例描述&quot; class=&quot;headerlink&quot; title=&quot;案例描述:&quot;&gt;&lt;/a&gt;案例描述:&lt;/h2&gt;&lt;p&gt;某公司的人员分为员工和经理两种，但经理也属于员工中的一种，公司的人员都有自己的姓名和地址，员工和经理都有自己的工号、工资</summary>
      
    
    
    
    <category term="java" scheme="https://bdta-zky.github.io/categories/java/"/>
    
    <category term="算法模拟题" scheme="https://bdta-zky.github.io/categories/java/%E7%AE%97%E6%B3%95%E6%A8%A1%E6%8B%9F%E9%A2%98/"/>
    
    
    <category term="java" scheme="https://bdta-zky.github.io/tags/java/"/>
    
    <category term="算法模拟题" scheme="https://bdta-zky.github.io/tags/%E7%AE%97%E6%B3%95%E6%A8%A1%E6%8B%9F%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>hexo-offline-popup（提升hexo框架博客访问速度）</title>
    <link href="https://bdta-zky.github.io/hexo-offline-popup%EF%BC%88%E6%8F%90%E5%8D%87hexo%E6%A1%86%E6%9E%B6%E5%8D%9A%E5%AE%A2%E8%AE%BF%E9%97%AE%E9%80%9F%E5%BA%A6%EF%BC%89/"/>
    <id>https://bdta-zky.github.io/hexo-offline-popup%EF%BC%88%E6%8F%90%E5%8D%87hexo%E6%A1%86%E6%9E%B6%E5%8D%9A%E5%AE%A2%E8%AE%BF%E9%97%AE%E9%80%9F%E5%BA%A6%EF%BC%89/</id>
    <published>2023-07-06T10:32:54.000Z</published>
    <updated>2023-09-26T01:23:12.489Z</updated>
    
    <content type="html"><![CDATA[<p>采用hexo+github的方式搭建博客的，访问速度是比较慢的。部署后访问有些甚至要加载十几秒，这对用户来说，是非常伤脑筋的，因为托管网站github是外网，所以访问慢是必然的。怎样解决这个问题，提升我们的访问速度呢?</p><p>最近在GitHub上发现一个名为hexo-offline-popup的插件，可以加快hexo的加载速度，解决这种问题。</p><h2 id="官方介绍"><a href="#官方介绍" class="headerlink" title="官方介绍"></a><strong>官方介绍</strong></h2><p><strong>hexo-offline-popup</strong> 是一个 hexo 插件， 它可加速您的Hexo网站的加载速度，以及网站内容更新弹窗提示。</p><p>该插件基于停止维护已久的hexo-service-worker插件，并在它的基础上加以改进。</p><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><p>在hexo的根目录下打开<strong>git bash</strong>输入如下指令下载安装</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i hexo-offline-popup --save</span><br></pre></td></tr></table></figure><p>如果npm i hexo-offline-popup –save命令执行得很慢，可能是由于网络连接较慢或npm仓库的响应时间较长导致的。您可以尝试以下方法来<strong>加快安装速度</strong>：</p><p><strong>使用淘宝镜像源：</strong>淘宝镜像源是一个国内的npm镜像源，可以加速npm包的下载。您可以使用以下命令将npm的镜像源设置为淘宝镜像：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure><p>然后再次运行安装命令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm i hexo-offline-popup --save</span><br></pre></td></tr></table></figure><p>安装后, 运行 <strong>hexo clean &amp;&amp; hexo generate</strong> 激活插件. </p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>如果网站提供的所有内容来自原始服务器，你不需要添加任何配置。只需安装和运行 <strong>hexo clean &amp;&amp; hexo generate</strong>。</p><p>在博客根目录的 _config.yml 中添加以下配置:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># offline config passed to sw-precache.</span><br><span class="line">service_worker:</span><br><span class="line">  maximumFileSizeToCacheInBytes: 5242880</span><br><span class="line">  staticFileGlobs:</span><br><span class="line">  - public/**/*.&#123;js,html,css,png,jpg,gif,svg,eot,ttf,woff,woff2&#125;</span><br><span class="line">  stripPrefix: public</span><br><span class="line">  verbose: true</span><br></pre></td></tr></table></figure><p>如果你有CDN资源，例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://cdn.some.com/some/path/some-script.js</span><br><span class="line"></span><br><span class="line">http://cdn.some-else.org/some/path/deeply/some-style.css</span><br></pre></td></tr></table></figure><p>将此配置添加到根目录的 _config.yml</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service_worker:</span><br><span class="line">  runtimeCaching:</span><br><span class="line">    - urlPattern: /*</span><br><span class="line">      handler: cacheFirst</span><br><span class="line">      options:</span><br><span class="line">        origin: cdn.some.com</span><br><span class="line">    - urlPattern: /*</span><br><span class="line">      handler: cacheFirst</span><br><span class="line">      options:</span><br><span class="line">        origin: cdn.some-else.org</span><br></pre></td></tr></table></figure><blockquote><p>附上GitHub仓库地址：<a href="https://github.com/Colsrch/hexo-offline-popup">Colsrch/hexo-offline-popup: 一个增强Hexo站点的插件 (github.com)</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;采用hexo+github的方式搭建博客的，访问速度是比较慢的。部署后访问有些甚至要加载十几秒，这对用户来说，是非常伤脑筋的，因为托管网站github是外网，所以访问慢是必然的。怎样解决这个问题，提升我们的访问速度呢?&lt;/p&gt;
&lt;p&gt;最近在GitHub上发现一个名为hexo</summary>
      
    
    
    
    <category term="资源教程" scheme="https://bdta-zky.github.io/categories/%E8%B5%84%E6%BA%90%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="资源教程" scheme="https://bdta-zky.github.io/tags/%E8%B5%84%E6%BA%90%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
</feed>
